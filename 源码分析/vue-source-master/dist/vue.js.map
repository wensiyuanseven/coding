{"version":3,"file":"vue.js","sources":["../src/utils.js","../src/observer/array.js","../src/observer/dep.js","../src/observer/observer.js","../src/state.js","../src/compiler/parser.js","../src/compiler/generator.js","../src/compiler/index.js","../src/observer/scheduler.js","../src/observer/watcher.js","../src/vdom/patch.js","../src/lifecycle.js","../src/init.js","../src/vdom/create-element.js","../src/render.js","../src/global-api/index.js","../src/index.js"],"sourcesContent":["// 此处放所有的工具方法\n\n\nexport function isObject(obj) {\n    return typeof obj === 'object' && obj !== null\n}\nconst LIFECYCLE_HOOKS = [\n    'beforeCreate',\n    'created',\n    'mounted',\n    'beforeMount',\n    'beforeUpdate',\n    'updated'\n]\nlet strats = {};\nfunction mergeHook(parentVal,childVal){ // []\n    if(childVal){ // 如果 孩子有值\n        if(parentVal){ // 父亲有值 就直接拼接\n            return parentVal.concat(childVal)\n        }else{ // 如果孩子有值父亲没值 就将孩子包装成数组\n            return [childVal] // Vue.options.beforeCreate = [childVal]\n        }\n    }else{\n        return parentVal; // 直接返回父亲，因为没有孩子\n    }\n}\nLIFECYCLE_HOOKS.forEach(hook=>{\n    strats[hook] = mergeHook\n})\nexport function mergeOptions(parent,child){ // {...parent,...child}  {a:1.b:2}  {a:{a:{b:2}}}\n    const options = {}\n    // 如果父亲和儿子里都有一个属性 这个属性不冲突\n    for(let key in parent){ // 处理父亲的所有属性\n        mergeField(key);\n    }\n    for(let key in child){ // 处理儿子的所有属性，如果父亲有的值 在第一个循环中就已经处理了\n        if(!parent.hasOwnProperty(key)){\n            mergeField(key);\n        }\n    }\n    function mergeField(key){\n        // 两个组件间 data是函数\n\n        // 写代码时很忌讳 各种if else if else\n\n        // 策略模式 根据不同的属性 调用不同的策略\n        if(strats[key]){\n            // 生命周期合并策略\n            // 这里就包含了 mergeHook的逻辑\n            options[key] = strats[key](parent[key],child[key])\n            console.log(parent[key],child[key])\n        }else if(isObject(parent[key]) && isObject(child[key])){\n            options[key] = Object.assign(parent[key],child[key])\n        }else{\n            if(child[key] == null){\n                options[key] = parent[key];\n            }else{\n                options[key] = child[key]; // 用儿子的值 直接覆盖掉 父亲的值\n            }\n        }\n    } // 面试时 经常会提到对象间的合并\n    return options\n}\n","let oldArrayMethods = Array.prototype; // 获取数组原型上的方法\n\n// 创建一个全新的对象 可以找到数组原型上的方法，而且修改对象时不会影响原数组的原型方法\n// 这样的话就只会拦截data中定义的数据了\n\n// vue为什么要重写原数组方法？的原因\n// https://www.zhihu.com/question/427389825\n\nexport let arrayMethods = Object.create(oldArrayMethods);\n\nlet methods = [ // 这七个方法都可以改变原数组\n    'push',\n    'pop',\n    'shift',\n    'unshift',\n    'sort',\n    'reverse',\n    'splice'\n]\n// 为什么要写reverse，sort  因为这会改变原数组，假如不写reserve 会去数组原型上找值 然后返回\n// 但是我们是要劫持数组，然后监听数组中的对象，那这样的话虽然能返回值，因为要去·通知依赖 更新模板\n\n\n//  一上来 就走这个地方\nmethods.forEach(method=>{                    // 剩余运算符   在函数中拿到是一个数组\n    arrayMethods[method] = function (...args) {  // 函数劫持 AOP 切片编程\n        // 当用户调用数组方法时 会先执行我自己改造的逻辑 在执行数组默认的逻辑\n        const ob = this.__ob__;\n        // this指数组本身 this指向arrayMethods  arrayMethods 又指向data  data等于数组\n        let result  = oldArrayMethods[method].apply(this,args);\n\n        // let result  = oldArrayMethods[method].call(this,...args);\n        let inserted;\n        // push unshift splice 都可以新增属性  （新增的属性可能是一个对象类型）\n        // 内部还对数组中引用类型也做了一次劫持  [].push({name:'zf'})\n        switch (method) {\n            case 'push':\n            case 'unshift':\n                inserted = args\n                break;\n            case 'splice': // 也是新增属性  可以修改 可以删除  [].splice(arr,1,'div')\n                inserted = args.slice(2);\n                break;\n            default:\n                break;\n        }\n        if(inserted){\n            ob.observeArray(inserted);\n        }\n        // 通知依赖搞得鬼\n         ob.dep.notify(); // 通知依赖 [通知的是整个数组的依赖]\n        // console.log(ob,'--')\n        return result;  // 原生数组有返回值\n    }\n})\n\n\n\n\n","let id = 0\nclass Dep {\n    constructor() {\n        this.id = id++;\n        this.subs = [];\n    }\n    depend(){\n        // 1. 让dep记住watcher\n        // 2. 让watcher 记住dep 双向记忆\n        // 此步骤是在watcher中处理的\n        // 这个地方也能标识出是谁记住了谁\n        Dep.target.addDep(this);  // 让watcher存储dep\n    }\n    addSub(watcher){\n        this.subs.push(watcher);\n    }\n    notify(){\n        this.subs.forEach(watcher=>watcher.update())\n    }\n}\nDep.target = null; // 默认target是空的\n\n\nconst stack = [];\n\n//  new Watcher时调用\nexport function pushTarget(watcher) {\n    Dep.target = watcher\n    //  stack.push(watcher) // []\n}\n\nexport function popTarget() {\n    Dep.target = null;\n    //   stack.pop();\n    //   Dep.target = stack[stack.length-1];\n}\n\n\nexport default Dep;\n// dep 和 watcher 是一个多对多的关系\n// 每个属性 都有一个dep属性 ，dep 存放着watcher  一个dep中有多个watcher ，一个watcher可能被多个属性所依赖","import { isObject } from \"../utils.js\";\nimport { arrayMethods } from \"./array\";\nimport Dep from \"./dep.js\";\n\n// es6的类来实现的\nclass Observer {\n  constructor(data) {\n    // 这个对象上面只挂了一个dep\n    this.dep = new Dep(); // 给每一个数组增加一个dep 目的是当数组方法变更的时候通知 notify();  因为不挂载的话 没办法通知\n    // 对数索引进行拦截 性能差而且直接更改索引的方式并不多\n    Object.defineProperty(data, \"__ob__\", {\n      // __ob__ 是一个响应式表示 对象数组都有\n      enumerable: false, // 不可枚举\n      configurable: false,\n      value: this\n      // get:()=>this\n    });\n    // data.__ob__ = this; // 相当于在数据上可以获取到__ob__这个属性 指代的是Observer的实例\n    if (Array.isArray(data)) {\n      // vue如何对数组进行处理呢？ 数组用的是重写数组的方法  函数劫持\n      // 改变数组本身的方法我就可以监控到了\n      data.__proto__ = arrayMethods; // 通过原型链 向上查找的方式\n      // [{a:1}]    => arr[0].a = 100\n      this.observeArray(data);\n    } else {\n      this.walk(data);  // 可以对数据一步一步的处理\n    }\n  }\n  // 循环数组中的每一项\n  observeArray(data) {\n    for (let i = 0; i < data.length; i++) {\n      observe(data[i]); // 检测数组的对象类型\n    }\n  }\n  walk(data) {\n    // 对象的循环   data:{msg:'zf',age:11}\n    Object.keys(data).forEach(key => {\n      defineReactive(data, key, data[key]); // 定义响应式的数据变化\n    });\n  }\n}\n\n// vue2 的性能 递归重写get和set  proxy\n// 此方法第当向数组中添加[].push[123]不会走此方法\nfunction defineReactive(data, key, value) {\n  let childOb = observe(value); // 如果传入的值还是一个对象的话 就做递归循环检测   初始监听时都是null  因为不是对象\n  let dep = new Dep(); // msg.dep =[watcher]  age.dep = [watcher]  // 渲染watcher中.deps [msg.dep,age.dep]\n  Object.defineProperty(data, key, {\n    get() {\n      // 这里会有取值的操作,给这个属性增加一个dep，这个dep 要和刚才我放到全局变量的上的watcher 做一个对应关系\n      if (Dep.target) {\n\n        dep.depend(); // 让这个dep 去收集 watcher\n        // 数组或者数组方法会走此逻辑  但是是为了数组方法更改后的依赖收集\n        if (childOb) {\n          // 如果是数组 watcher中每次都会有两个dep\n          // 假如数组方法添加的不是对象 那么根本不会触发walk()方法\n          // 如果模板中定义了走set  对象/数组的date 都会有一个dep,但是只有更改了原数组的方法,时才会触发 这个数据上的dep\n          childOb.dep.depend();\n        }\n      }\n      return value;\n    },\n    set(newValue) {\n      if (newValue == value) return;\n      observe(newValue); // 监控当前设置的值，有可能用户给了一个新值，并且这个值也可能是一个对象，也需要递归去监测  比如：设置新值 vm.msg={a:1}\n      value = newValue;\n      // 当我们更新数据后 要把当前自己对应的watcher 去重新执行以下\n      dep.notify();\n    }\n  });\n}\n\nexport function observe(data) {\n  // 对象就是使用defineProperty 来实现响应式原理\n  // 如果这个数据不是对象 或者是null 那就不用监控了\n\n  if (!isObject(data)) return;\n\n  if (data.__ob__ instanceof Observer) return; // 防止对象被重复观测\n\n  // 对数据进行defineProperty\n  return new Observer(data); // 可以看到当前数据是否被观测过\n}\n","import { observe } from './observer/observer.js'\nexport function initState(vm) {\n    const opts = vm.$options;\n    if (opts.props) {\n        initProps(vm);\n    }\n    if (opts.methods) {\n        initMethod(vm);\n    }\n    if (opts.data) {\n        initData(vm);\n    }\n    // computed ... watch\n}\nfunction initProps() {}\nfunction initMethod() {}\nfunction proxy(target,property,key){\n    Object.defineProperty(target,key,{\n        get(){\n            return target[property][key];\n        },\n        set(newValue){\n            target[property][key] = newValue\n        }\n    })\n}\n\nfunction initData(vm) {\n    // 数据响应式原理\n    let data = vm.$options.data; // 用户传入的数据\n    // vm._data 就是检测后的数据了\n    data = vm._data = typeof data === 'function' ? data.call(vm) : data;\n    // 观测数据\n    // 将数据全部代理到vm的实例上\n\n    for(let key in data){\n        proxy(vm,'_data',key);\n    }\n    observe(data); // 观测这个数据\n}","//              字母a-zA-Z_ - . 数组小写字母 大写字母\nconst ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*`; // 标签名\n// ?:匹配不捕获   <aaa:aaa>\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`;\n// startTagOpen 可以匹配到开始标签 正则捕获到的内容是 (标签名)\nconst startTagOpen = new RegExp(`^<${qnameCapture}`); // 标签开头的正则 捕获的内容是标签名\n// 闭合标签 </xxxxxxx>\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`); // 匹配标签结尾的 </div>\n// <div aa   =   \"123\"  bb=123  cc='123'\n// 捕获到的是 属性名 和 属性值 arguments[1] || arguments[2] || arguments[2]\nconst attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/; // 匹配属性的\n// <div >   <br/>\nconst startTagClose = /^\\s*(\\/?)>/; // 匹配标签结束的 >\n// 匹配动态变量的  +? 尽可能少匹配\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g\nexport function parseHTML(html) {\n    // ast 树 表示html的语法\n    let root; // 树根\n    let currentParent;\n    let stack = []; // 用来判断标签是否正常闭合  [div]  解析器可以借助栈型结构\n    // <div id=\"app\" style=\"color:red\"><span>    helloworld {{msg}}   </span></div>\n\n    // vue2.0 只能有一个根节点 必须是html 元素\n\n    // 常见数据结构 栈 队列 数组 链表 集合 hash表 树\n    function createASTElement(tagName, attrs) {\n        return {\n            tag: tagName,\n            attrs,\n            children: [],\n            parent: null,\n            type: 1 // 1 普通元素  3 文本\n        }\n    }\n    // console.log(html)\n    function start(tagName, attrs) { // 开始标签 每次解析开始标签 都会执行此方法\n        let element = createASTElement(tagName, attrs);\n        if (!root) {\n            root = element; // 只有第一次是根\n        }\n        currentParent = element;\n        stack.push(element);\n    }\n    // <div> <span></span> hello world</div>   [div,span]\n    function end(tagName) { // 结束标签  确立父子关系\n        let element = stack.pop();\n        currentParent = stack[stack.length - 1];\n        if (currentParent) {\n            element.parent = currentParent;\n            currentParent.children.push(element);\n        }\n    }\n\n    function chars(text) { // 文本\n        text = text.replace(/\\s/g, '');\n        if (text) {\n            currentParent.children.push({\n                type: 3,\n                text\n            })\n        }\n    }\n    // 根据 html 解析成树结构  </span></div>\n    while (html) {\n        let textEnd = html.indexOf('<');\n        if (textEnd == 0) {\n            const startTageMatch = parseStartTag();\n\n            if (startTageMatch) {\n                // 开始标签\n                start(startTageMatch.tagName, startTageMatch.attrs)\n            }\n            const endTagMatch = html.match(endTag);\n\n            if (endTagMatch) {\n                advance(endTagMatch[0].length);\n                end(endTagMatch[1])\n            }\n            // 结束标签\n        }\n\n        // 如果不是0 说明是文本\n        let text;\n        if (textEnd > 0) {\n            text = html.substring(0, textEnd); // 是文本就把文本内容进行截取\n            chars(text);\n        }\n        if (text) {\n            advance(text.length); // 删除文本内容\n        }\n    }\n\n    function advance(n) {\n        html = html.substring(n);\n    }\n\n    function parseStartTag() {\n        const start = html.match(startTagOpen); // 匹配开始标签\n        if (start) {\n            const match = {\n                tagName: start[1], // 匹配到的标签名\n                attrs: []\n            }\n            advance(start[0].length);\n            let end, attr;\n            while (!(end = html.match(startTagClose)) && (attr = html.match(attribute))) {\n                advance(attr[0].length);\n                match.attrs.push({ name: attr[1], value: attr[3] || attr[4] || attr[5] })\n            };\n            if (end) {\n                advance(end[0].length);\n                return match;\n            }\n        }\n    }\n\n    return root;\n\n}","const defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g\n\nfunction genProps(attrs){  // {id:'app',style:{color:red}}\n    let str = ''\n    for(let i = 0; i<attrs.length; i++){\n        let attr = attrs[i]; // 取到每一个属性\n        if(attr.name === 'style'){\n            let obj = {}; //  color:red;background:green\n            attr.value.split(';').forEach(item=>{\n                let [key,value] = item.split(':');\n                obj[key] = value;\n            });\n            attr.value = obj; // 将原来的字符串换成了 刚才格式化后的对象\n        }\n        str += `${attr.name}:${JSON.stringify(attr.value)},`\n    }\n    return `{${str.slice(0,-1)}}`;\n}\nfunction gen(node){\n    if(node.type === 1){\n        return generate(node)\n    }else{\n        // 文本的处理\n        let text = node.text;\n        if(!defaultTagRE.test(text)){  // 有变量 {{}}\n            return `_v(${JSON.stringify(text)})` // _v('helloworld')\n        }else{\n            let tokens = []; // 每次正则使用过后 都需要重新指定 lastIndex  aaaab\n            let lastIndex =  defaultTagRE.lastIndex = 0;\n            let match,index;\n            while(match = defaultTagRE.exec(text)){\n                index = match.index;\n                // 通过 lastIndex,ndex\n                tokens.push(JSON.stringify(text.slice(lastIndex,index)));\n                tokens.push(`_s(${match[1].trim()})`);\n                lastIndex = index + match[0].length\n            }\n            if(lastIndex < text.length){\n                tokens.push(JSON.stringify(text.slice(lastIndex)));\n            }\n            return `_v(${tokens.join('+')})`\n        }\n        // helloworld {{  msg  }}  aa {{bb}}  aaa   => _v('helloworld'+_s(msg)+\"aa\" + _s(bb))\n    }\n}\nfunction genChildren(el){ // <div><span></span> hello</div>\n    const children = el.children;\n    if(children){\n        return children.map(c=>gen(c)).join(',')\n    }else{\n        return false\n    }\n}\nexport function generate(el){\n    let children = genChildren(el); // 生成孩子字符串\n    let code = `_c(\"${el.tag}\",${\n            el.attrs.length? `${genProps(el.attrs)}`  : undefined\n        }${\n            children? `,${children}` :''\n        })`;\n    return code;\n}\n// 语法级的编译","import { parseHTML } from \"./parser.js\";\nimport { generate } from \"./generator.js\";\nexport function compileToFunctions(template) {\n  // console.log(template)\n  // 实现模板的编译\n\n  let ast = parseHTML(template);\n  console.log(ast, \"抽象语法树\");\n  // 代码生成\n  // template => render 函数\n\n  /**\n     * react\n     * render(){\n        * with(this){\n        *  return _c('div',{id:app,style:{color:red}},_c('span',undefined,_v(\"helloworld\"+_s(msg)) ))\n        * }\n     * }\n     *\n     */\n  // 核心就是字符串拼接\n  let code = generate(ast); // 代码生成 =》 拼接字符串\n  code = `with(this){ \\r\\nreturn ${code} \\r\\n}`;\n\n  let render = new Function(code); // 相当于给字符串变成了函数\n\n  console.log(render, \"render\");\n\n  // 注释节点 自闭和标签 事件绑定 @click  class slot插槽\n\n  return render;\n  // 模板编译原理\n  // 1.先把我们的代码转化成ast语法树 （1）  parser 解析  (正则)\n  // 2.标记静态树  （2） 树得遍历标记 markup  只是优化\n  // 3.通过ast产生的语法树 生成 代码 =》 render函数  codegen\n}\n","let has = {}; // vue源码里有的时候去重用的是set 有的时候用的是对象来实现的去重\nlet queue = [];\n\n// 这个队列是否正在等待更新\nfunction flushSchedulerQueue() {\n  for (let i = 0; i < queue.length; i++) {\n    queue[i].run();\n  }\n  queue = [];\n  has = {};\n}\n\nlet callbacks = []; // [flushSchedulerQueue,fn1,fn2]\nexport function queueWatcher(watcher) {\n  const id = watcher.id;\n  if (has[id] == null) {\n    has[id] = true; // 如果没有注册过这个watcher，就注册这个watcher到队列中，并且标记为已经注册\n    queue.push(watcher);\n    // 每次都会把它清空状态 但是queue数组中一直在增加,\n    // 所以相当于flushSchedulerQueue只有一次被加进callbacks中了\n    callbacks = [];\n     nextTick(flushSchedulerQueue); // flushSchedulerQueue  调用渲染watcher\n  }\n}\n\nfunction flushCallbacksQueue() {\n  callbacks.forEach(fn => fn());\n}\n\nexport function nextTick(fn) {\n  callbacks.push(fn);\n  // true  事件环的概念 promise mutationObserver setImmediate setTimeout\n  setTimeout(() => {\n    flushCallbacksQueue();\n  }, 0);\n\n}\n","import { pushTarget, popTarget } from \"./dep\";\nimport { queueWatcher } from \"./scheduler\";\n\nlet id = 0; // 做一个watcher 的id 每次创建watcher时 都有一个序号\n// 目前写到这里 只有一个watcher 渲染watchrer，只要视图中使用到了这个属性，而且属性变化了就要更新视图\n\nclass Watcher {\n    constructor(vm, exprOrFn, cb, options) {\n        this.vm = vm;\n        this.exprOrFn = exprOrFn;\n        this.cb = cb;\n        this.options = options;\n        this.deps = []; // 这个渲染watcher会存放所有的dep\n        this.depsId = new Set();\n        if (typeof exprOrFn == 'function') {\n            this.getter = exprOrFn;\n        }\n        this.id = id++;\n        // 默认直接调用get\n        this.get();\n    }\n    run(){\n        this.get(); // 重新渲染\n    }\n    get() {\n        // 1.是先把渲染watcher 放到了 Dep.target上\n        // 2.this.getter()  不是去页面取值渲染  就是调用 defineProperty的取值操作\n        // 3.我就获取当前全局的 Dep.target,每个属性都有一个dep 取值是就将Dep.target 保留到当前的dep中\n        // 4.数据变化 通知watcher 更新\n        pushTarget(this); // 在取值之前 先把 watcher 保存到 dep 上起来\n        // 触发dep的set操作\n        this.getter(); // 这句话就实现了视图的渲染  -》 操作是取值\n        popTarget(); // 删掉watcher\n        // Vue是组件级别更新的\n    }\n    addDep(dep) {\n        let id = dep.id;\n        if (!this.depsId.has(id)) {\n            this.depsId.add(id);\n            // 为什么要让watcher记住dep?\n            // 只有watch watcher时才需要在watcher中记录dep,是为了unWatcher时做解绑操作\n            // 而computed wathcer 不需要做解绑操作 所以不需要记忆\n            // 当做解绑操作时，会把dep中记录的watch watcher移除掉 这样当dep触发notice就不会触发wath watcher了\n            this.deps.push(dep);\n            dep.addSub(this); // 让当前dep 订阅这个watcher  而每一个dep都对应一个渲染watcher\n            // console.log(this.deps,'dep-----')\n        }\n    }\n    update(){  // 更新原理\n        // 批量更新\n        queueWatcher(this); // 将watcher存储起来\n        // this.get();  // 以前调用get方法是直接更新视图\n    }\n}\n\n\nexport default Watcher","export function patch(oldVnode, newVnode) {\n    const isRealElement = oldVnode.nodeType;\n    if (isRealElement) {\n        // 真实元素\n        const oldElm = oldVnode;\n        const parentElm = oldElm.parentNode;\n        let el = createElm(newVnode);\n        parentElm.insertBefore(el, oldElm.nextSibling)\n        parentElm.removeChild(oldElm);\n        return el; // 渲染的真实dom\n    } else {\n        // dom diff 算法  同层比较 （默认想完整比对一棵树 O(n^3)）  O(n)\n        // 不需要跨级比较\n        // 两棵树 要先比较树根一不一样，再去比儿子长的是否一样\n\n        if (oldVnode.tag !== newVnode.tag) { // 标签名不一致 说明是两个不一样的节点\n            oldVnode.el.parentNode.replaceChild(createElm(newVnode), oldVnode.el);\n        }\n        // 标签一致 div  都是文本 tag = undefined\n\n        if (!oldVnode.tag) { // 如果是文本 文本变化了 直接用新的文本替换掉老的文本\n            if (oldVnode.text !== newVnode.text) {\n                oldVnode.el.textContent = newVnode.text;\n            }\n        }\n        // 一定是标签了 而且标签一致\n        // 需要复用老的节点 替换掉老的属性\n        let el = newVnode.el = oldVnode.el;\n        // 更新属性  diff 属性\n        updateProperties(newVnode, oldVnode.data); // 此时属性就更新完毕了 当前的树根已经完成了\n\n        // 比对孩子节点\n        let oldChildren = oldVnode.children || []; // 老的孩子\n        let newChildren = newVnode.children || []; // 新的孩子\n\n        // 新老都有孩子 那就比较 diff核心\n        // 老的有孩子 新的没孩子 直接删除\n        // 新的有孩子  老的没孩子 直接插入\n\n        if (oldChildren.length > 0 && newChildren.length > 0) {\n            // diff  两个人都有儿子 ** 这里要不停的去比较孩子节点\n            updateChildren(el, oldChildren, newChildren);\n            // 通过比较老孩子和新孩子 操作el中的儿子\n\n        } else if (oldChildren.length > 0) {\n            el.innerHTML = '';\n        } else if (newChildren.length > 0) {\n            for (let i = 0; i < newChildren.length; i++) {\n                let child = newChildren[i]; // 拿到一个个的孩子\n                el.appendChild(createElm(child)); // 浏览器会自动优化\n            }\n        }\n        return el;\n    }\n}\n\nfunction isSameVnode(oldVnode, newVnode) {\n    return (oldVnode.key == newVnode.key) && (oldVnode.tag === newVnode.tag);\n}\n\nfunction updateChildren(parent, oldChildren, newChildren) {\n    // Vue2.0 使用双指针的方式 来进行比对\n    // v-for 要有key  key可以标识元素 是否发生变化 前后的key相同则可以复用这个元素\n\n    let oldStartIndex = 0; // 老的开始的索引\n    let oldStartVnode = oldChildren[0]; // 老的开始\n    let oldEndIndex = oldChildren.length - 1; // 老的尾部索引\n    let oldEndVnode = oldChildren[oldEndIndex]; // 获取老的孩子的最后一个\n\n    let newStartIndex = 0; // 老的开始的索引\n    let newStartVnode = newChildren[0]; // 老的开始\n    let newEndIndex = newChildren.length - 1; // 老的尾部索引\n    let newEndVnode = newChildren[newEndIndex]; // 获取老的孩子的最后一个\n\n    function makeIndexByKey(children) { // 只需要创建一次 映射表\n        let map = {};\n        children.forEach((item, index) => {\n            map[item.key] = index;\n        })\n        return map\n    }\n    let map = makeIndexByKey(oldChildren); // 根据老的孩子的key 创建一个映射表\n    // 1方案1 先开始从头部进行比较  O(n)  优化向后插入的逻辑\n    // 比较时 就是采用最短的进行比较，剩下的要不是删除要么是增加\n    while (oldStartIndex <= oldEndIndex && newStartIndex <= newEndIndex) {\n        // 如何判断 两个虚拟节点是否一致 就是用key + type 进行判断\n        if (!oldStartVnode) {\n            oldStartVnode = oldChildren[++oldStartIndex];\n        } else if (!oldEndVnode) {\n            oldEndVnode = oldChildren[--oldEndIndex]\n        } else if (isSameVnode(oldStartVnode, newStartVnode)) {\n            //标签和key一致 但是 元素可能属性不一致\n            patch(oldStartVnode, newStartVnode); //自身属性 +  递归比较\n            oldStartVnode = oldChildren[++oldStartIndex];\n            newStartVnode = newChildren[++newStartIndex];\n            //  指针不停的在动\n        } else if (isSameVnode(oldEndVnode, newEndVnode)) {\n            // 2 方案2  从尾部开始比较 如果头部不一致 开始尾部比较， 优化向前插入\n            patch(oldEndVnode, newEndVnode);\n            oldEndVnode = oldChildren[--oldEndIndex]; // 移动尾部指针\n            newEndVnode = newChildren[--newEndIndex];\n        } else if (isSameVnode(oldStartVnode, newEndVnode)) { // 正序  和 倒叙  reverst sort\n            // 3方案3 头不一样 尾不一样  头移尾  倒序操作\n            patch(oldStartVnode, newEndVnode);\n            parent.insertBefore(oldStartVnode.el, oldEndVnode.el.nextSibling); // 具备移动性\n            oldStartVnode = oldChildren[++oldStartIndex];\n            newEndVnode = newChildren[--newEndIndex];\n        } else if (isSameVnode(oldEndVnode, newStartVnode)) { // 老的尾 和新的头比对\n            patch(oldEndVnode, newStartVnode);\n            parent.insertBefore(oldEndVnode.el, oldStartVnode.el)\n            oldEndVnode = oldChildren[--oldEndIndex];\n            newStartVnode = newChildren[++newStartIndex];\n        } else {\n            // 乱序比对  最终处理\n            let moveIndex = map[newStartVnode.key];\n            if (moveIndex == undefined) { // 是一个新元素 ，应该添加进去\n                parent.insertBefore(createElm(newStartVnode), oldStartVnode.el)\n            } else {\n                let moveVnode = oldChildren[moveIndex];\n                oldChildren[moveIndex] = null; // 占位 如果直接删除 可能会导致数组塌陷  [a,b,null,d]\n\n                // 比对当前这两个元素属性和儿子\n                patch(moveVnode, newStartVnode);\n                parent.insertBefore(moveVnode.el, oldStartVnode.el);\n            }\n            newStartVnode = newChildren[++newStartIndex]; // 移动新的指针\n        }\n\n    }\n    if (newStartIndex <= newEndIndex) {\n        for (let i = newStartIndex; i <= newEndIndex; i++) {\n            // appendChild   =  insertBefore null  js原生操作\n            let ele = newChildren[newEndIndex + 1] == null ? null : newChildren[newEndIndex + 1].el\n            parent.insertBefore(createElm(newChildren[i]), ele);\n            // parent.appendChild(createElm(newChildren[i]))\n        }\n    }\n    if (oldStartIndex <= oldEndIndex) { // 说明新的已经循环完毕了 老的有剩余 剩余就是不要的\n        for (let i = oldStartIndex; i <= oldEndIndex; i++) {\n            let child = oldChildren[i];\n            if (child != null) {\n                parent.removeChild(child.el);\n            }\n        }\n    }\n\n    // 没有key 就直接比较类型，如果类型一样就复用 （隐藏的问题是儿子可能都需要重新创建）\n    // 循环时尽量采用唯一的标识 作为key 如果用索引（例如倒叙 会采用索引来复用，不够准确） 如果是静态数据 （你爱用啥用啥）\n\n\n    // 下周六 开班第一天\n\n}\nexport function createElm(vnode) { // 需要递归创建\n    let { tag, children, data, key, text } = vnode;\n    if (typeof tag == 'string') {\n        // 元素 // 将虚拟节点和真实节点做一个映射关系 （后面diff时如果元素相同直接复用老元素 ）\n        vnode.el = document.createElement(tag);\n        updateProperties(vnode); // 跟新元素属性\n        children.forEach(child => {\n            // 递归渲染子节点 将子节点 渲染到父节点中\n            vnode.el.appendChild(createElm(child));\n        });\n    } else {\n        // 普通的文本\n        vnode.el = document.createTextNode(text);\n    }\n    return vnode.el\n}\n\nfunction updateProperties(vnode, oldProps = {}) {\n\n    // 需要比较 vnode.data 和 oldProps的差异\n\n    let el = vnode.el;\n    let newProps = vnode.data || {};\n    // 获取老的样式和新的样式的差异 如果新的上面丢失了属性 应该在老的元素上删除掉\n    let newStyle = newProps.style || {};\n    let oldStyle = oldProps.style || {};\n\n    for (let key in oldStyle) {\n        if (!newStyle[key]) {\n            el.style[key] = ''; // 删除之前的样式\n        }\n    }\n    for (let key in oldProps) {\n        if (!newProps[key]) { // 此时的元素一是以前\n            el.removeAttribute(key);\n        }\n    }\n\n    // 其他情况直接用新的值覆盖掉老的值即可\n    for (let key in newProps) {\n        if (key == 'style') {\n            for (let styleName in newProps.style) { // {color:red,background:green}\n                el.style[styleName] = newProps.style[styleName]  //style会重新拼接\n            }\n            // 浏览器重新渲染也会看值是否变化\n        }\n        // event\n        else {\n            el.setAttribute(key, newProps[key]);\n        }\n    }\n}","import Watcher from './observer/watcher';\nimport { patch } from './vdom/patch';\nexport function lifeCycleMixin(Vue) {\n    Vue.prototype._update = function(vnode) {\n        const vm = this;\n        // 将虚拟节点 变成 真实节点 替换掉$el\n        // 后续 dom diff 也会执行此方法\n        vm.$el = patch(vm.$el, vnode);\n    }\n}\n\nexport function mountComponent(vm, el) {\n    // Vue在渲染的过程中 会创建一个 所谓的“渲染watcher ” 只用来渲染的\n    // watcher就是一个回调 每次数据变化 就会重新执行watcher\n    // Vue是不是MVVM框架\n    callHook(vm, 'beforeMount') // 位置写错了 应该写到render函数生成的地方\n    const updateComponent = () => {\n        // 内部会调用刚才我们解析后的render方法 =》 vnode\n        // _render => options.render 方法\n        // _update => 将虚拟dom 变成真实dom 来执行\n        // console.log('update')\n        vm._update(vm._render());\n    }\n\n    // 每次数据变化 就执行 updateComponent 方法 进行更新操作\n    // 执行是同步的\n    new Watcher(vm, updateComponent, () => {}, true);\n\n    callHook(vm, 'mounted');\n\n    // vue 响应式数据的规则 数据变了 视图会刷新\n}\n\n\nexport function callHook(vm, hook) { // vm.$options\n    // console.log(vm.$options,'-----------------')\n    let handlers = vm.$options[hook]; // 典型的发布订阅模式\n    // console.log(handlers,'handlers')\n    if (handlers) {\n        for (let i = 0; i < handlers.length; i++) { // [fn,fn,fn]\n            handlers[i].call(vm); // 所有的生命周期的this 指向的都是当前的实例\n        }\n    }\n}","import { initState } from \"./state\";\nimport { compileToFunctions } from \"./compiler/index.js\";\nimport { mountComponent, callHook } from \"./lifecycle.js\";\nimport { mergeOptions } from \"./utils\";\nimport { nextTick } from \"./observer/scheduler\";\nexport function initMixin(Vue) {\n  // 添加原型方法\n  Vue.prototype._init = function(options) {\n    // Vue的内部 $options 就是用户传递的所有参数\n    const vm = this;\n    // 这个options 就包含了用户创建实例时传入的所有属性  Vue.options\n    // console.log(vm.constructor.zidingyi,'vm.constructor')\n    vm.$options = mergeOptions(vm.constructor.options, options); // 用户传入的参数\n    callHook(vm, \"beforeCreate\");\n\n    // 初始化状态\n    initState(vm); // 初始化状态\n    callHook(vm, \"created\");\n    // 需要通过模板进行渲染\n    if (vm.$options.el) {\n      // 用户传入了el属性\n      vm.$mount(vm.$options.el);\n    }\n  };\n  Vue.prototype.$mount = function(el) {\n    // 可能是字符串 也可以传入一个dom对象\n    const vm = this;\n    el = vm.$el = document.querySelector(el); // 获取el属性\n\n    // 如果同时传入 template 和render  默认会采用render 抛弃template，如果都没传就使用id=\"app\"中的模板\n    const opts = vm.$options;\n\n    if (!opts.render) {\n      let template = opts.template;\n      if (!template && el) {\n        // 应该使用外部的模板\n        template = el.outerHTML;\n      }\n      const render = compileToFunctions(template);\n      opts.render = render;\n    }\n\n    // 走到这里说明不需要编译了 ，因为用户传入的就是 一个render函数\n\n    mountComponent(vm, el); // 组件的挂载流程\n  };\n}\n","export function createTextVNode(text) {\n  return vnode(undefined, undefined, undefined, undefined, text);\n}\nexport function createElement(tag, data = {}, ...children) {\n  // vue中的key 不会作为属性传递给组件\n\n  return vnode(tag, data, data.key, children);\n}\n// 虚拟节点是 产生一个对象 用来描述dom结构 增加自定义属性\n// ast 他是描述 dom语法的\nfunction vnode(tag, data, key, children, text) {\n  return {\n    tag,\n    data,\n    key,\n    children,\n    text\n  };\n}\n","import {createTextVNode,createElement} from './vdom/create-element'\nexport function renderMixin(Vue) {\n    Vue.prototype._v = function(text) {\n        // 创建文本的虚拟及诶点\n        return createTextVNode(text)\n    }\n    Vue.prototype._c = function() {\n        return createElement(...arguments);\n    }\n    Vue.prototype._s = function(val) {\n        // 判断当前这个值是不是对象 ，如果是对象 直接转换成字符串 ，防止页面出现[object Object]\n        return val == null ? '' : (typeof val === 'object' ? JSON.stringify(val) : val);\n    }\n    Vue.prototype._render = function() {\n        // 调用我们自己实现的render方法\n        const vm = this;\n        const { render } = vm.$options;\n        //   console.log(render,'-----')\n\n        let vnode = render.call(vm); // _c _c  _s\n        console.log(vnode,'vnode')\n\n        return vnode\n    }\n}","// Vue.directive Vue.filter Vue.component\nimport { mergeOptions } from \"../utils\";\n\nexport function initGlobalAPI(Vue) {\n  // 全局api 肯定接受很多参数\n  Vue.options = {}; // 所有的全局api 用户传递的参数 都会绑定到这个对象中\n  Vue.zidingyi = { abc: \"123\" }; // 举例\n  // 提取公共的方法 逻辑，通过此方法混合到每个实例中\n  // 写几个调用几次\n  Vue.mixin = function(mixin) {\n    //   console.log(this,'this')\n    // 此时this指向vue函数\n    this.options = mergeOptions(this.options, mixin);\n  };\n}\n","import { initMixin } from \"./init\"; //给vue混入一个_init方法(模块化)\nimport { renderMixin } from \"./render.js\";\nimport { lifeCycleMixin } from \"./lifecycle\";\nimport { initGlobalAPI } from \"./global-api/index.js\";\nimport { nextTick } from \"./observer/scheduler\";\nfunction Vue(options) {\n  // 内部要进行初始化的操作\n  this._init(options); // 初始化操作\n}\n\ninitMixin(Vue); // 添加原型的方法 初始化状态\nrenderMixin(Vue);\nlifeCycleMixin(Vue);\n\n// initGlobalApi 给构造函数来扩展全局的方法\n\ninitGlobalAPI(Vue);\n\nVue.prototype.$nextTick = nextTick;\n\n// ----------------------diff----------------------------\n// diff 是比较两个树的差异 （虚拟dom）  把前后的dom节点渲染成虚拟dom，通过虚拟节点比对,找到差异，更新真实dom节点\nimport { compileToFunctions } from \"./compiler/index\";\nimport { createElm, patch } from \"./vdom/patch\";\n// let vm1 = new Vue({data:{name:'zf'}});\n// let vm2 = new Vue({data:{name:'jw'}});\n\n// let render1 = compileToFunctions(`<div>\n//     <li key=\"A\">A</li>\n//     <li key=\"B\">B</li>\n//     <li key=\"C\">C</li>\n//     <li key=\"D\">D</li>\n// </div>`);\n// let oldVnode = render1.call(vm1);\n\n// let realElement = createElm(oldVnode);\n// document.body.appendChild(realElement);\n\n// let render2 = compileToFunctions(`<div>\n//     <li key=\"C\">C</li>\n//     <li key=\"D\">D</li>\n//     <li key=\"M\">M</li>\n//     <li key=\"E\">E</li>\n// </div>`);\n// let newVnode = render2.call(vm2);\n// // 没有虚拟dom 和 diff算法时  直接重新渲染 强制重新更新页面（没有复用老的节点），\n// // diff 算法 而是先不对差异 在进行更新\n// setTimeout(() => {\n//     patch(oldVnode,newVnode); // 虚拟节点之间的比对\n// }, 1000);\n\nexport default Vue;\n"],"names":["isObject","obj","LIFECYCLE_HOOKS","strats","mergeHook","parentVal","childVal","concat","forEach","hook","mergeOptions","parent","child","options","key","mergeField","hasOwnProperty","console","log","Object","assign","oldArrayMethods","Array","prototype","arrayMethods","create","methods","method","ob","__ob__","args","result","apply","inserted","slice","observeArray","dep","notify","id","Dep","subs","target","addDep","watcher","push","update","pushTarget","popTarget","Observer","data","defineProperty","enumerable","configurable","value","isArray","__proto__","walk","i","length","observe","keys","defineReactive","childOb","get","depend","set","newValue","initState","vm","opts","$options","props","initData","proxy","property","_data","call","ncname","qnameCapture","startTagOpen","RegExp","endTag","attribute","startTagClose","parseHTML","html","root","currentParent","stack","createASTElement","tagName","attrs","tag","children","type","start","element","end","pop","chars","text","replace","textEnd","indexOf","startTageMatch","parseStartTag","endTagMatch","match","advance","substring","n","attr","name","defaultTagRE","genProps","str","split","item","JSON","stringify","gen","node","generate","test","tokens","lastIndex","index","exec","trim","join","genChildren","el","map","c","code","undefined","compileToFunctions","template","ast","render","Function","has","queue","flushSchedulerQueue","run","callbacks","queueWatcher","nextTick","flushCallbacksQueue","fn","setTimeout","Watcher","exprOrFn","cb","deps","depsId","Set","getter","add","addSub","patch","oldVnode","newVnode","isRealElement","nodeType","oldElm","parentElm","parentNode","createElm","insertBefore","nextSibling","removeChild","replaceChild","textContent","updateProperties","oldChildren","newChildren","updateChildren","innerHTML","appendChild","isSameVnode","oldStartIndex","oldStartVnode","oldEndIndex","oldEndVnode","newStartIndex","newStartVnode","newEndIndex","newEndVnode","makeIndexByKey","moveIndex","moveVnode","ele","vnode","document","createElement","createTextNode","oldProps","newProps","newStyle","style","oldStyle","removeAttribute","styleName","setAttribute","lifeCycleMixin","Vue","_update","$el","mountComponent","callHook","updateComponent","_render","handlers","initMixin","_init","constructor","$mount","querySelector","outerHTML","createTextVNode","renderMixin","_v","_c","arguments","_s","val","initGlobalAPI","zidingyi","abc","mixin","$nextTick"],"mappings":"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"}
{"version":3,"file":"vue.js","sources":["../src/utils.js","../src/observer/array.js","../src/observer/dep.js","../src/observer/index.js","../src/state.js","../src/compiler/parser.js","../src/compiler/generator.js","../src/compiler/index.js","../src/observer/scheduler.js","../src/observer/watcher.js","../src/lifecycle.js","../src/init.js","../src/index.js"],"sourcesContent":["// 此处放所有的工具方法\n\n\nexport function isObject(obj) {\n    return typeof obj === 'object' && obj !== null\n}\nconst LIFECYCLE_HOOKS = [\n    'beforeCreate',\n    'created',\n    'mounted',\n    'beforeUpdate',\n    'updated'\n]\nlet strats = {};\nfunction mergeHook(parentVal,childVal){ // []\n    if(childVal){ // 如果 孩子有值 \n        if(parentVal){ // 父亲有值 就直接拼接\n            return parentVal.concat(childVal)\n        }else{ // 如果孩子有值父亲没值 就将孩子包装成数组\n            return [childVal] // Vue.options.beforeCreate = [childVal]\n        }\n    }else{\n        return parentVal; // 直接返回父亲，因为没有孩子  \n    }\n}\nLIFECYCLE_HOOKS.forEach(hook=>{\n    strats[hook] = mergeHook\n})\nexport function mergeOptions(parent,child){ // {...parent,...child}  {a:1.b:2}  {a:{a:{b:2}}}\n    const options = {}\n    // 如果父亲和儿子里都有一个属性 这个属性不冲突 \n    for(let key in parent){ // 处理父亲的所有属性\n        mergeField(key);\n    }\n    for(let key in child){ // 处理儿子的所有属性，如果父亲有的值 在第一个循环中就已经处理了\n        if(!parent.hasOwnProperty(key)){\n            mergeField(key);\n        }\n    }\n    function mergeField(key){\n        // 两个组件间 data是函数 \n\n        // 写代码时很忌讳 各种if else if else \n\n        // 策略模式 根据不同的属性 调用不同的策略  \n        if(strats[key]){\n            // 这里就包含了 mergeHook的逻辑\n            options[key] = strats[key](parent[key],child[key])\n        }else if(isObject(parent[key]) && isObject(child[key])){\n            options[key] = Object.assign(parent[key],child[key])\n        }else{\n            if(child[key] == null){\n                options[key] = parent[key];\n            }else{\n                options[key] = child[key]; // 用儿子的值 直接覆盖掉 父亲的值\n            }\n        }\n    } // 面试时 经常会提到对象间的合并\n    return options\n}\n","let oldArrayMethods = Array.prototype; // 获取数组原型上的方法\n\n// 创建一个全新的对象 可以找到数组原型上的方法，而且修改对象时不会影响原数组的原型方法\nexport let arrayMethods = Object.create(oldArrayMethods);\n\nlet methods = [ // 这七个方法都可以改变原数组\n    'push',\n    'pop',\n    'shift',\n    'unshift',\n    'sort',\n    'reverse',\n    'splice'\n]\nmethods.forEach(method=>{\n    arrayMethods[method] = function (...args) { // 函数劫持 AOP\n        // 当用户调用数组方法时 会先执行我自己改造的逻辑 在执行数组默认的逻辑\n        const ob = this.__ob__;\n        let result  = oldArrayMethods[method].apply(this,args);\n        let inserted;\n        // push unshift splice 都可以新增属性  （新增的属性可能是一个对象类型）\n        // 内部还对数组中引用类型也做了一次劫持  [].push({name:'zf'})\n        switch (method) {\n            case 'push':\n            case 'unshift':\n                inserted = args\n                break;\n            case 'splice': // 也是新增属性  可以修改 可以删除  [].splice(arr,1,'div')\n                inserted = args.slice(2);\n                break;\n            default:\n                break;\n        }\n        inserted && ob.observeArray(inserted);\n        return result;\n    }\n})\n\n\n\n\n","let id = 0\nclass Dep {\n    constructor() {\n        this.id = id++;\n        this.subs = [];\n    }\n    depend(){\n        // 1. 让dep 记住watcher\n        // 2. 让watcher 记住dep 双向记忆\n        Dep.target.addDep(this); // 让watcher 存储dep\n    }\n    addSub(watcher){\n        this.subs.push(watcher);\n    }\n    notify(){\n        this.subs.forEach(watcher=>watcher.update())\n    }\n}\nDep.target = null; // 默认target是空的\nconst stack = [];\nexport function pushTarget(watcher) {\n    Dep.target = watcher\n    //  stack.push(watcher) // []\n}\n\nexport function popTarget() {\n    Dep.target = null;\n    //   stack.pop();\n    //   Dep.target = stack[stack.length-1];\n}\n\n\nexport default Dep;\n// dep 和 watcher 是一个多对多的关系\n// 每个属性 都有一个dep属性 ，dep 存放着watcher  一个dep中有多个watcher ，一个watcher可能被多个属性所依赖","import {isObject} from '../utils.js';\nimport {arrayMethods} from './array'\nimport Dep from './dep.js';\n\n// es6的类来实现的\nclass Observer{\n    constructor(data){\n        // 对数组索引进行拦截 性能差而且直接更改索引的方式并不多\n        Object.defineProperty(data,'__ob__',{ // __ob__ 是一个响应式饿表示 对象数组都有\n            enumerable:false, // 不可枚举\n            configurable:false,\n            value:this\n        })\n        // data.__ob__ = this; // 相当于在数据上可以获取到__ob__这个属性 指代的是Observer的实例\n        if(Array.isArray(data)){\n            // vue如何对数组进行处理呢？ 数组用的是重写数组的方法  函数劫持\n            // 改变数组本身的方法我就可以监控到了\n            data.__proto__ = arrayMethods; // 通过原型链 向上查找的方式\n            // [{a:1}]    => arr[0].a = 100\n            this.observeArray(data);\n        }else{\n            this.walk(data); // 可以对数据一步一步的处理\n        }\n    }\n    observeArray(data){\n        for(let i =0 ; i< data.length;i++){\n            observe(data[i]);// 检测数组的对象类型\n        }\n    }\n    walk(data){\n        // 对象的循环   data:{msg:'zf',age:11}\n        Object.keys(data).forEach(key=>{\n            defineReactive(data,key,data[key]);// 定义响应式的数据变化\n        })\n    }\n}\n// vue2 的性能 递归重写get和set  proxy\nfunction defineReactive(data,key,value){\n    observe(value); // 如果传入的值还是一个对象的话 就做递归循环检测\n    let dep = new Dep(); // msg.dep =[watcher]  age.dep = [watcher]  // 渲染watcher中.deps [msg.dep,age.dep]\n    Object.defineProperty(data,key,{\n        get(){\n            // 这里会有取值的操作  ，给这个属性增加一个dep，这个dep 要和刚才我放到全局变量的上的watcher 做一个对应关系\n            if(Dep.target){\n                dep.depend(); // 让这个dep 去收集watcher\n            }\n            return value\n        },\n        set(newValue){\n            if(newValue == value) return;\n            observe(newValue); // 监控当前设置的值，有可能用户给了一个新值\n            value = newValue;\n\n            // 当我们更新数据后 要把当前自己对应的watcher 去重新执行以下\n            dep.notify();\n\n\n        }\n    })\n}\n\nexport function observe(data){\n    // 对象就是使用defineProperty 来实现响应式原理\n\n    // 如果这个数据不是对象 或者是null 那就不用监控了\n    if(!isObject(data)){\n        return;\n    }\n    if(data.__ob__ instanceof Observer){ // 防止对象被重复观测\n        return ;\n    }\n\n    // 对数据进行defineProperty\n    return new Observer(data); // 可以看到当前数据是否被观测过\n}","import { observe } from './observer/index.js'\nexport function initState(vm) {\n    const opts = vm.$options;\n    if (opts.props) {\n        initProps(vm);\n    }\n    if (opts.methods) {\n        initMethod(vm);\n    }\n    if (opts.data) {\n        initData(vm);\n    }\n    // computed ... watch\n}\nfunction initProps() {}\nfunction initMethod() {}\nfunction proxy(target,property,key){\n    Object.defineProperty(target,key,{\n        get(){\n            return target[property][key];\n        },\n        set(newValue){\n            target[property][key] = newValue\n        }\n    })\n}\nfunction initData(vm) {\n    // 数据响应式原理\n    let data = vm.$options.data; // 用户传入的数据\n    // vm._data 就是检测后的数据了\n    data = vm._data = typeof data === 'function' ? data.call(vm) : data;\n    // 观测数据\n    // 将数据全部代理到vm的实例上\n\n    for(let key in data){\n        proxy(vm,'_data',key);\n    }\n    observe(data); // 观测这个数据\n}","//              字母a-zA-Z_ - . 数组小写字母 大写字母  \nconst ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*`; // 标签名\n// ?:匹配不捕获   <aaa:aaa>\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`;\n// startTagOpen 可以匹配到开始标签 正则捕获到的内容是 (标签名)\nconst startTagOpen = new RegExp(`^<${qnameCapture}`); // 标签开头的正则 捕获的内容是标签名\n// 闭合标签 </xxxxxxx>  \nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`); // 匹配标签结尾的 </div>\n// <div aa   =   \"123\"  bb=123  cc='123'\n// 捕获到的是 属性名 和 属性值 arguments[1] || arguments[2] || arguments[2]\nconst attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/; // 匹配属性的\n// <div >   <br/>\nconst startTagClose = /^\\s*(\\/?)>/; // 匹配标签结束的 >\n// 匹配动态变量的  +? 尽可能少匹配\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g\nexport function parseHTML(html) {\n    // ast 树 表示html的语法\n    let root; // 树根 \n    let currentParent;\n    let stack = []; // 用来判断标签是否正常闭合  [div]  解析器可以借助栈型结构\n    // <div id=\"app\" style=\"color:red\"><span>    helloworld {{msg}}   </span></div>\n\n    // vue2.0 只能有一个根节点 必须是html 元素\n\n    // 常见数据结构 栈 队列 数组 链表 集合 hash表 树\n    function createASTElement(tagName, attrs) {\n        return {\n            tag: tagName,\n            attrs,\n            children: [],\n            parent: null,\n            type: 1 // 1 普通元素  3 文本\n        }\n    }\n    // console.log(html)\n    function start(tagName, attrs) { // 开始标签 每次解析开始标签 都会执行此方法\n        let element = createASTElement(tagName, attrs);\n        if (!root) {\n            root = element; // 只有第一次是根\n        }\n        currentParent = element;\n        stack.push(element);\n    }\n    // <div> <span></span> hello world</div>   [div,span]\n    function end(tagName) { // 结束标签  确立父子关系\n        let element = stack.pop();\n        currentParent = stack[stack.length - 1];\n        if (currentParent) {\n            element.parent = currentParent;\n            currentParent.children.push(element);\n        }\n    }\n\n    function chars(text) { // 文本\n        text = text.replace(/\\s/g, '');\n        if (text) {\n            currentParent.children.push({\n                type: 3,\n                text\n            })\n        }\n    }\n    // 根据 html 解析成树结构  </span></div>\n    while (html) {\n        let textEnd = html.indexOf('<');\n        if (textEnd == 0) {\n            const startTageMatch = parseStartTag();\n\n            if (startTageMatch) {\n                // 开始标签\n                start(startTageMatch.tagName, startTageMatch.attrs)\n            }\n            const endTagMatch = html.match(endTag);\n\n            if (endTagMatch) {\n                advance(endTagMatch[0].length);\n                end(endTagMatch[1])\n            }\n            // 结束标签 \n        }\n\n        // 如果不是0 说明是文本\n        let text;\n        if (textEnd > 0) {\n            text = html.substring(0, textEnd); // 是文本就把文本内容进行截取\n            chars(text);\n        }\n        if (text) {\n            advance(text.length); // 删除文本内容\n        }\n    }\n\n    function advance(n) {\n        html = html.substring(n);\n    }\n\n    function parseStartTag() {\n        const start = html.match(startTagOpen); // 匹配开始标签\n        if (start) {\n            const match = {\n                tagName: start[1], // 匹配到的标签名\n                attrs: []\n            }\n            advance(start[0].length);\n            let end, attr;\n            while (!(end = html.match(startTagClose)) && (attr = html.match(attribute))) {\n                advance(attr[0].length);\n                match.attrs.push({ name: attr[1], value: attr[3] || attr[4] || attr[5] })\n            };\n            if (end) {\n                advance(end[0].length);\n                return match;\n            }\n        }\n    }\n\n    return root;\n\n}","const defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g\n\nfunction genProps(attrs){  // {id:'app',style:{color:red}}\n    let str = ''\n    for(let i = 0; i<attrs.length; i++){\n        let attr = attrs[i]; // 取到每一个属性\n        if(attr.name === 'style'){\n            let obj = {}; //  color:red;background:green\n            attr.value.split(';').forEach(item=>{\n                let [key,value] = item.split(':');\n                obj[key] = value;\n            });\n            attr.value = obj; // 将原来的字符串换成了 刚才格式化后的对象\n        }\n        str += `${attr.name}:${JSON.stringify(attr.value)},`\n    }\n    return `{${str.slice(0,-1)}}`;\n}\nfunction gen(node){\n    if(node.type === 1){\n        return generate(node)\n    }else{\n        // 文本的处理\n        let text = node.text;\n        if(!defaultTagRE.test(text)){  // 有变量 {{}}\n            return `_v(${JSON.stringify(text)})` // _v('helloworld')\n        }else{\n            let tokens = []; // 每次正则使用过后 都需要重新指定 lastIndex  aaaab\n            let lastIndex =  defaultTagRE.lastIndex = 0;\n            let match,index;\n            while(match = defaultTagRE.exec(text)){\n                index = match.index;\n                // 通过 lastIndex,ndex\n                tokens.push(JSON.stringify(text.slice(lastIndex,index)));\n                tokens.push(`_s(${match[1].trim()})`);\n                lastIndex = index + match[0].length\n            }\n            if(lastIndex < text.length){\n                tokens.push(JSON.stringify(text.slice(lastIndex)));\n            }\n            return `_v(${tokens.join('+')})`\n        }\n        // helloworld {{  msg  }}  aa {{bb}}  aaa   => _v('helloworld'+_s(msg)+\"aa\" + _s(bb))\n    }\n}  \nfunction genChildren(el){ // <div><span></span> hello</div>\n    const children = el.children;\n    if(children){\n        return children.map(c=>gen(c)).join(',')\n    }else{\n        return false\n    }\n}\nexport function generate(el){\n    let children = genChildren(el); // 生成孩子字符串\n    let code = `_c(\"${el.tag}\",${\n            el.attrs.length? `${genProps(el.attrs)}`  : undefined\n        }${\n            children? `,${children}` :''\n        })`;\n\n    return code;\n}\n// 语法级的编译 ","import {parseHTML} from './parser.js'\nimport {generate} from './generator.js';\nexport function compileToFunctions(template){\n    // console.log(template)\n    // 实现模板的编译\n\n    let ast = parseHTML(template);\n\n    // 代码生成\n    // template => render 函数\n\n    /**\n     * react\n     * render(){\n        * with(this){\n        *  return _c('div',{id:app,style:{color:red}},_c('span',undefined,_v(\"helloworld\"+_s(msg)) ))\n        * }\n     * }\n     *\n     */\n    // 核心就是字符串拼接\n    let code = generate(ast); // 代码生成 =》 拼接字符串\n\n    code = `with(this){ \\r\\nreturn ${code} \\r\\n}`;\n\n    let render = new Function(code); // 相当于给字符串变成了函数\n\n\n    // 注释节点 自闭和标签 事件绑定 @click  class slot插槽\n\n    return render;\n    // 模板编译原理\n    // 1.先把我们的代码转化成ast语法树 （1）  parser 解析  (正则)\n    // 2.标记静态树  （2） 树得遍历标记 markup  只是优化\n    // 3.通过ast产生的语法树 生成 代码 =》 render函数  codegen\n}","let has = {}; // vue源码里有的时候去重用的是set 有的时候用的是对象来实现的去重\nlet queue = [];\n\n// 这个队列是否正在等待更新\nfunction flushSchedulerQueue() {\n    for (let i = 0; i < queue.length; i++) {\n        queue[i].run();\n    }\n    queue = [];\n    has = {};\n}\n\nlet callbacks = []; // [flushSchedulerQueue,fn]\n\nexport function queueWatcher(watcher) {\n    const id = watcher.id;\n\n    if (has[id] == null) {\n        has[id] = true; // 如果没有注册过这个watcher，就注册这个watcher到队列中，并且标记为已经注册\n        queue.push(watcher);\n        callbacks=[]\n        nextTick(flushSchedulerQueue); // flushSchedulerQueue 调用渲染watche\n    }\n\n}\n\nlet pending = false;\nfunction flushCallbacksQueue() {\n    callbacks.forEach(fn => fn());\n}\n\nexport function nextTick(fn) {\n    callbacks.push(fn); // 防抖\n    // console.log(callbacks)\n    // if (!pending) { // true  事件环的概念 promise mutationObserver  setImmediate setTimeout\n        setTimeout(() => {\n            flushCallbacksQueue();\n            // callbacks=[]\n        }, 0);\n\n    // }\n}","import { pushTarget, popTarget } from \"./dep\";\nimport { queueWatcher } from \"./scheduler\";\n\nlet id = 0; // 做一个watcher 的id 每次创建watcher时 都有一个序号\n// 目前写到这里 只有一个watcher 渲染watchrer，只要视图中使用到了这个属性，而且属性变化了就要更新视图\n\nclass Watcher {\n    constructor(vm, exprOrFn, cb, options) {\n        this.vm = vm;\n        this.exprOrFn = exprOrFn;\n        this.cb = cb;\n        this.options = options;\n        this.deps = []; // 这个watcher会存放所有的dep\n        this.depsId = new Set();\n        if (typeof exprOrFn == 'function') {\n            this.getter = exprOrFn;\n        }\n        this.id = id++;\n        this.get();\n    }\n    run(){\n        this.get(); // 重新渲染\n    }\n    get() {\n        // 1.是先把渲染watcher 放到了 Dep.target上\n        // 2.this.getter()  是不是去页面取值渲染  就是调用defineProperty的取值操作\n        // 3.我就获取当前全局的Dep.target,每个属性都有一个dep 取值是就将Dep.target 保留到当前的dep中\n        // 4.数据变化 通知watcher 更新\n\n        pushTarget(this); // 在取值之前 将watcher先保存起来\n        this.getter(); // 这句话就实现了视图的渲染  -》 操作是取值\n        popTarget(); // 删掉watcher\n\n        // Vue是组件级别更新的\n    }\n    addDep(dep) {\n        let id = dep.id;\n        if (!this.depsId.has(id)) {\n            this.depsId.add(id);\n            this.deps.push(dep);\n            dep.addSub(this); // 让当前dep 订阅这个watcher\n        }\n    }\n    update(){ // 更新原理\n        queueWatcher(this); // 将watcher存储起来\n        // this.get();  // 以前调用get方法是直接更新视图\n    }\n}\n\n\nexport default Watcher","import Watcher from './observer/watcher';\nimport { patch } from './vdom/patch';\nexport function lifeCycleMixin(Vue) {\n    Vue.prototype._update = function(vnode) {\n        const vm = this;\n\n        // 将虚拟节点 变成 真实节点 替换掉$el\n\n        // 后续 dom diff 也会执行此方法\n\n\n        vm.$el = patch(vm.$el, vnode);\n\n    }\n}\nexport function mountComponent(vm, el) {\n    // Vue在渲染的过程中 会创建一个 所谓的“渲染watcher ” 只用来渲染的\n    // watcher就是一个回调 每次数据变化 就会重新执行watcher\n\n\n    // Vue是不是MVVM框架\n    callHook(vm, 'beforeMount')\n    const updateComponent = () => {\n        // 内部会调用刚才我们解析后的render方法 =》 vnode\n        // _render => options.render 方法\n        // _update => 将虚拟dom 变成真实dom 来执行\n        console.log('update')\n        vm._update(vm._render());\n    }\n\n    // 每次数据变化 就执行 updateComponent 方法 进行更新操作\n    new Watcher(vm, updateComponent, () => {}, true);\n\n    callHook(vm, 'mounted');\n\n\n\n    // vue 响应式数据的规则 数据变了 视图会刷新\n}\n\n\nexport function callHook(vm, hook) { // vm.$options\n    let handlers = vm.$options[hook]; // 典型的发布订阅模式\n    if (handlers) {\n        for (let i = 0; i < handlers.length; i++) { // [fn,fn,fn]\n            handlers[i].call(vm); // 所有的生命周期的this 指向的都是当前的实例\n        }\n    }\n}","import { initState } from './state';\nimport {compileToFunctions} from './compiler/index.js';\nimport {mountComponent, callHook} from './lifecycle.js'\nimport { mergeOptions } from './utils';\nexport function initMixin(Vue) {\n\n    Vue.prototype._init = function(options) {\n        // Vue的内部 $options 就是用户传递的所有参数\n        const vm = this;\n        // // 这个options 就包含了用户创建实例时传入的所有属性 Vue.options\n        vm.$options = mergeOptions(vm.constructor.options,options); // 用户传入的参数\n\n        callHook(vm,'beforeCreate')\n        initState(vm); // 初始化状态\n\n        callHook(vm,'created')\n        // 需要通过模板进行渲染\n        if (vm.$options.el) { // 用户传入了el属性\n            vm.$mount(vm.$options.el)\n        }\n    }\n    Vue.prototype.$mount = function (el) { // 可能是字符串 也可以传入一个dom对象\n        debugger\n        const vm = this;\n        el = vm.$el = document.querySelector(el); // 获取el属性\n\n        // 如果同时传入 template 和render  默认会采用render 抛弃template，如果都没传就使用id=\"app\"中的模板\n        const opts = vm.$options;\n\n        if(!opts.render){\n            let template = opts.template;\n            if(!template && el){ // 应该使用外部的模板\n                template = el.outerHTML;\n                console.log(template)\n            }\n            const render = compileToFunctions(template);\n            opts.render = render;\n        }\n\n        // 走到这里说明不需要编译了 ，因为用户传入的就是 一个render函数\n\n        mountComponent(vm,el); // 组件的挂载流程\n    }\n\n}\n\n","import {initMixin} from './init'; //给vue混入一个_init方法(模块化)\n// import {renderMixin} from './render.js';\n// import {lifeCycleMixin} from './lifecycle';\n// import {initGlobalAPI} from './global-api/index.js'\n// import { nextTick } from './observer/scheduler';\nfunction Vue(options){\n\n    // 内部要进行初始化的操作\n    this._init(options); // 初始化操作\n}\n\ninitMixin(Vue); // 添加原型的方法\n// renderMixin(Vue);\n// lifeCycleMixin(Vue);\n\n\n// // initGlobalApi 给构造函数来扩展全局的方法\n// initGlobalAPI(Vue);\n// Vue.prototype.$nextTick = nextTick\n\n\n\n// // ----------------------diff----------------------------\n// // diff 是比较两个树的差异 （虚拟dom）  把前后的dom节点渲染成虚拟dom，通过虚拟节点比对,找到差异，更新真实dom节点\n// import {compileToFunctions} from './compiler/index';\n// import {createElm,patch} from './vdom/patch'\n// let vm1 = new Vue({data:{name:'zf'}});\n// let vm2 = new Vue({data:{name:'jw'}});\n\n// let render1 = compileToFunctions(`<div>\n//     <li key=\"A\">A</li>\n//     <li key=\"B\">B</li>\n//     <li key=\"C\">C</li>\n//     <li key=\"D\">D</li>\n// </div>`);\n// let oldVnode = render1.call(vm1);\n\n// let realElement = createElm(oldVnode);\n// document.body.appendChild(realElement);\n\n\n// let render2 = compileToFunctions(`<div>\n//     <li key=\"C\">C</li>\n//     <li key=\"D\">D</li>\n//     <li key=\"M\">M</li>\n//     <li key=\"E\">E</li>\n// </div>`);\n// let newVnode = render2.call(vm2);\n// // 没有虚拟dom 和 diff算法时  直接重新渲染 强制重新更新页面（没有复用老的节点），\n// // diff 算法 而是先不对差异 在进行更新\n// setTimeout(() => {\n\n\n//     patch(oldVnode,newVnode); // 虚拟节点之间的比对\n// }, 1000);\n\n\n\n\nexport default Vue;"],"names":["isObject","obj","LIFECYCLE_HOOKS","strats","mergeHook","parentVal","childVal","concat","forEach","hook","mergeOptions","parent","child","options","key","mergeField","hasOwnProperty","Object","assign","oldArrayMethods","Array","prototype","arrayMethods","create","methods","method","args","ob","__ob__","result","apply","inserted","slice","observeArray","id","Dep","constructor","subs","depend","target","addDep","addSub","watcher","push","notify","update","pushTarget","popTarget","Observer","data","defineProperty","enumerable","configurable","value","isArray","__proto__","walk","i","length","observe","keys","defineReactive","dep","get","set","newValue","initState","vm","opts","$options","props","initData","proxy","property","_data","call","ncname","qnameCapture","startTagOpen","RegExp","endTag","attribute","startTagClose","parseHTML","html","root","currentParent","stack","createASTElement","tagName","attrs","tag","children","type","start","element","end","pop","chars","text","replace","textEnd","indexOf","startTageMatch","parseStartTag","endTagMatch","match","advance","substring","n","attr","name","defaultTagRE","genProps","str","split","item","JSON","stringify","gen","node","generate","test","tokens","lastIndex","index","exec","trim","join","genChildren","el","map","c","code","undefined","compileToFunctions","template","ast","render","Function","has","queue","flushSchedulerQueue","run","callbacks","queueWatcher","nextTick","flushCallbacksQueue","fn","setTimeout","Watcher","exprOrFn","cb","deps","depsId","Set","getter","add","mountComponent","callHook","updateComponent","console","log","_update","_render","handlers","initMixin","Vue","_init","$mount","$el","document","querySelector","outerHTML"],"mappings":";;;;;;IAAA;IAGO,SAASA,QAAT,CAAkBC,GAAlB,EAAuB;IAC1B,SAAO,OAAOA,GAAP,KAAe,QAAf,IAA2BA,GAAG,KAAK,IAA1C;IACH;IACD,MAAMC,eAAe,GAAG,CACpB,cADoB,EAEpB,SAFoB,EAGpB,SAHoB,EAIpB,cAJoB,EAKpB,SALoB,CAAxB;IAOA,IAAIC,MAAM,GAAG,EAAb;;IACA,SAASC,SAAT,CAAmBC,SAAnB,EAA6BC,QAA7B,EAAsC;IAAE;IACpC,MAAGA,QAAH,EAAY;IAAE;IACV,QAAGD,SAAH,EAAa;IAAE;IACX,aAAOA,SAAS,CAACE,MAAV,CAAiBD,QAAjB,CAAP;IACH,KAFD,MAEK;IAAE;IACH,aAAO,CAACA,QAAD,CAAP,CADC;IAEJ;IACJ,GAND,MAMK;IACD,WAAOD,SAAP,CADC;IAEJ;IACJ;;IACDH,eAAe,CAACM,OAAhB,CAAwBC,IAAI,IAAE;IAC1BN,EAAAA,MAAM,CAACM,IAAD,CAAN,GAAeL,SAAf;IACH,CAFD;IAGO,SAASM,YAAT,CAAsBC,MAAtB,EAA6BC,KAA7B,EAAmC;IAAE;IACxC,QAAMC,OAAO,GAAG,EAAhB,CADsC;;IAGtC,OAAI,IAAIC,GAAR,IAAeH,MAAf,EAAsB;IAAE;IACpBI,IAAAA,UAAU,CAACD,GAAD,CAAV;IACH;;IACD,OAAI,IAAIA,GAAR,IAAeF,KAAf,EAAqB;IAAE;IACnB,QAAG,CAACD,MAAM,CAACK,cAAP,CAAsBF,GAAtB,CAAJ,EAA+B;IAC3BC,MAAAA,UAAU,CAACD,GAAD,CAAV;IACH;IACJ;;IACD,WAASC,UAAT,CAAoBD,GAApB,EAAwB;IACpB;IAEA;IAEA;IACA,QAAGX,MAAM,CAACW,GAAD,CAAT,EAAe;IACX;IACAD,MAAAA,OAAO,CAACC,GAAD,CAAP,GAAeX,MAAM,CAACW,GAAD,CAAN,CAAYH,MAAM,CAACG,GAAD,CAAlB,EAAwBF,KAAK,CAACE,GAAD,CAA7B,CAAf;IACH,KAHD,MAGM,IAAGd,QAAQ,CAACW,MAAM,CAACG,GAAD,CAAP,CAAR,IAAyBd,QAAQ,CAACY,KAAK,CAACE,GAAD,CAAN,CAApC,EAAiD;IACnDD,MAAAA,OAAO,CAACC,GAAD,CAAP,GAAeG,MAAM,CAACC,MAAP,CAAcP,MAAM,CAACG,GAAD,CAApB,EAA0BF,KAAK,CAACE,GAAD,CAA/B,CAAf;IACH,KAFK,MAED;IACD,UAAGF,KAAK,CAACE,GAAD,CAAL,IAAc,IAAjB,EAAsB;IAClBD,QAAAA,OAAO,CAACC,GAAD,CAAP,GAAeH,MAAM,CAACG,GAAD,CAArB;IACH,OAFD,MAEK;IACDD,QAAAA,OAAO,CAACC,GAAD,CAAP,GAAeF,KAAK,CAACE,GAAD,CAApB,CADC;IAEJ;IACJ;IACJ,GA7BqC;;;IA8BtC,SAAOD,OAAP;IACH;;IC3DD,IAAIM,eAAe,GAAGC,KAAK,CAACC,SAA5B;IAEA;;IACO,IAAIC,YAAY,GAAGL,MAAM,CAACM,MAAP,CAAcJ,eAAd,CAAnB;IAEP,IAAIK,OAAO,GAAG;IACV,MADU,EAEV,KAFU,EAGV,OAHU,EAIV,SAJU,EAKV,MALU,EAMV,SANU,EAOV,QAPU,CAAd;IASAA,OAAO,CAAChB,OAAR,CAAgBiB,MAAM,IAAE;IACpBH,EAAAA,YAAY,CAACG,MAAD,CAAZ,GAAuB,UAAU,GAAGC,IAAb,EAAmB;IAAE;IACxC;IACA,UAAMC,EAAE,GAAG,KAAKC,MAAhB;IACA,QAAIC,MAAM,GAAIV,eAAe,CAACM,MAAD,CAAf,CAAwBK,KAAxB,CAA8B,IAA9B,EAAmCJ,IAAnC,CAAd;IACA,QAAIK,QAAJ,CAJsC;IAMtC;;IACA,YAAQN,MAAR;IACI,WAAK,MAAL;IACA,WAAK,SAAL;IACIM,QAAAA,QAAQ,GAAGL,IAAX;IACA;;IACJ,WAAK,QAAL;IAAe;IACXK,QAAAA,QAAQ,GAAGL,IAAI,CAACM,KAAL,CAAW,CAAX,CAAX;IACA;IAPR;;IAWAD,IAAAA,QAAQ,IAAIJ,EAAE,CAACM,YAAH,CAAgBF,QAAhB,CAAZ;IACA,WAAOF,MAAP;IACH,GApBD;IAqBH,CAtBD;;ICdA,IAAIK,EAAE,GAAG,CAAT;;IACA,MAAMC,GAAN,CAAU;IACNC,EAAAA,WAAW,GAAG;IACV,SAAKF,EAAL,GAAUA,EAAE,EAAZ;IACA,SAAKG,IAAL,GAAY,EAAZ;IACH;;IACDC,EAAAA,MAAM,GAAE;IACJ;IACA;IACAH,IAAAA,GAAG,CAACI,MAAJ,CAAWC,MAAX,CAAkB,IAAlB,EAHI;IAIP;;IACDC,EAAAA,MAAM,CAACC,OAAD,EAAS;IACX,SAAKL,IAAL,CAAUM,IAAV,CAAeD,OAAf;IACH;;IACDE,EAAAA,MAAM,GAAE;IACJ,SAAKP,IAAL,CAAU7B,OAAV,CAAkBkC,OAAO,IAAEA,OAAO,CAACG,MAAR,EAA3B;IACH;;IAfK;;IAiBVV,GAAG,CAACI,MAAJ,GAAa,IAAb;IAEO,SAASO,UAAT,CAAoBJ,OAApB,EAA6B;IAChCP,EAAAA,GAAG,CAACI,MAAJ,GAAaG,OAAb,CADgC;IAGnC;IAEM,SAASK,SAAT,GAAqB;IACxBZ,EAAAA,GAAG,CAACI,MAAJ,GAAa,IAAb,CADwB;IAGxB;IACH;IAKD;;IC7BA,MAAMS,QAAN,CAAc;IACVZ,EAAAA,WAAW,CAACa,IAAD,EAAM;IACb;IACAhC,IAAAA,MAAM,CAACiC,cAAP,CAAsBD,IAAtB,EAA2B,QAA3B,EAAoC;IAAE;IAClCE,MAAAA,UAAU,EAAC,KADqB;IACd;IAClBC,MAAAA,YAAY,EAAC,KAFmB;IAGhCC,MAAAA,KAAK,EAAC;IAH0B,KAApC,EAFa;;IAQb,QAAGjC,KAAK,CAACkC,OAAN,CAAcL,IAAd,CAAH,EAAuB;IACnB;IACA;IACAA,MAAAA,IAAI,CAACM,SAAL,GAAiBjC,YAAjB,CAHmB;IAInB;;IACA,WAAKW,YAAL,CAAkBgB,IAAlB;IACH,KAND,MAMK;IACD,WAAKO,IAAL,CAAUP,IAAV,EADC;IAEJ;IACJ;;IACDhB,EAAAA,YAAY,CAACgB,IAAD,EAAM;IACd,SAAI,IAAIQ,CAAC,GAAE,CAAX,EAAeA,CAAC,GAAER,IAAI,CAACS,MAAvB,EAA8BD,CAAC,EAA/B,EAAkC;IAC9BE,MAAAA,OAAO,CAACV,IAAI,CAACQ,CAAD,CAAL,CAAP,CAD8B;IAEjC;IACJ;;IACDD,EAAAA,IAAI,CAACP,IAAD,EAAM;IACN;IACAhC,IAAAA,MAAM,CAAC2C,IAAP,CAAYX,IAAZ,EAAkBzC,OAAlB,CAA0BM,GAAG,IAAE;IAC3B+C,MAAAA,cAAc,CAACZ,IAAD,EAAMnC,GAAN,EAAUmC,IAAI,CAACnC,GAAD,CAAd,CAAd,CAD2B;IAE9B,KAFD;IAGH;;IA7BS;;;IAgCd,SAAS+C,cAAT,CAAwBZ,IAAxB,EAA6BnC,GAA7B,EAAiCuC,KAAjC,EAAuC;IACnCM,EAAAA,OAAO,CAACN,KAAD,CAAP,CADmC;;IAEnC,MAAIS,GAAG,GAAG,IAAI3B,GAAJ,EAAV,CAFmC;;IAGnClB,EAAAA,MAAM,CAACiC,cAAP,CAAsBD,IAAtB,EAA2BnC,GAA3B,EAA+B;IAC3BiD,IAAAA,GAAG,GAAE;IACD;IACA,UAAG5B,GAAG,CAACI,MAAP,EAAc;IACVuB,QAAAA,GAAG,CAACxB,MAAJ,GADU;IAEb;;IACD,aAAOe,KAAP;IACH,KAP0B;;IAQ3BW,IAAAA,GAAG,CAACC,QAAD,EAAU;IACT,UAAGA,QAAQ,IAAIZ,KAAf,EAAsB;IACtBM,MAAAA,OAAO,CAACM,QAAD,CAAP,CAFS;;IAGTZ,MAAAA,KAAK,GAAGY,QAAR,CAHS;;IAMTH,MAAAA,GAAG,CAAClB,MAAJ;IAGH;;IAjB0B,GAA/B;IAmBH;;IAEM,SAASe,OAAT,CAAiBV,IAAjB,EAAsB;IACzB;IAEA;IACA,MAAG,CAACjD,QAAQ,CAACiD,IAAD,CAAZ,EAAmB;IACf;IACH;;IACD,MAAGA,IAAI,CAACrB,MAAL,YAAuBoB,QAA1B,EAAmC;IAAE;IACjC;IACH,GATwB;;;IAYzB,SAAO,IAAIA,QAAJ,CAAaC,IAAb,CAAP,CAZyB;IAa5B;;ICzEM,SAASiB,SAAT,CAAmBC,EAAnB,EAAuB;IAC1B,QAAMC,IAAI,GAAGD,EAAE,CAACE,QAAhB;;IACA,MAAID,IAAI,CAACE,KAAT,EAAgB;;IAGhB,MAAIF,IAAI,CAAC5C,OAAT,EAAkB;;IAGlB,MAAI4C,IAAI,CAACnB,IAAT,EAAe;IACXsB,IAAAA,QAAQ,CAACJ,EAAD,CAAR;IACH,GAVyB;;IAY7B;;IAGD,SAASK,KAAT,CAAejC,MAAf,EAAsBkC,QAAtB,EAA+B3D,GAA/B,EAAmC;IAC/BG,EAAAA,MAAM,CAACiC,cAAP,CAAsBX,MAAtB,EAA6BzB,GAA7B,EAAiC;IAC7BiD,IAAAA,GAAG,GAAE;IACD,aAAOxB,MAAM,CAACkC,QAAD,CAAN,CAAiB3D,GAAjB,CAAP;IACH,KAH4B;;IAI7BkD,IAAAA,GAAG,CAACC,QAAD,EAAU;IACT1B,MAAAA,MAAM,CAACkC,QAAD,CAAN,CAAiB3D,GAAjB,IAAwBmD,QAAxB;IACH;;IAN4B,GAAjC;IAQH;;IACD,SAASM,QAAT,CAAkBJ,EAAlB,EAAsB;IAClB;IACA,MAAIlB,IAAI,GAAGkB,EAAE,CAACE,QAAH,CAAYpB,IAAvB,CAFkB;IAGlB;;IACAA,EAAAA,IAAI,GAAGkB,EAAE,CAACO,KAAH,GAAW,OAAOzB,IAAP,KAAgB,UAAhB,GAA6BA,IAAI,CAAC0B,IAAL,CAAUR,EAAV,CAA7B,GAA6ClB,IAA/D,CAJkB;IAMlB;;IAEA,OAAI,IAAInC,GAAR,IAAemC,IAAf,EAAoB;IAChBuB,IAAAA,KAAK,CAACL,EAAD,EAAI,OAAJ,EAAYrD,GAAZ,CAAL;IACH;;IACD6C,EAAAA,OAAO,CAACV,IAAD,CAAP,CAXkB;IAYrB;;ICtCD;IACA,MAAM2B,MAAM,GAAI,8BAAhB;IACA;;IACA,MAAMC,YAAY,GAAI,OAAMD,MAAO,QAAOA,MAAO,GAAjD;;IAEA,MAAME,YAAY,GAAG,IAAIC,MAAJ,CAAY,KAAIF,YAAa,EAA7B,CAArB;IACA;;IACA,MAAMG,MAAM,GAAG,IAAID,MAAJ,CAAY,QAAOF,YAAa,QAAhC,CAAf;IACA;IACA;;IACA,MAAMI,SAAS,GAAG,2EAAlB;IACA;;IACA,MAAMC,aAAa,GAAG,YAAtB;IAGO,SAASC,SAAT,CAAmBC,IAAnB,EAAyB;IAC5B;IACA,MAAIC,IAAJ,CAF4B;;IAG5B,MAAIC,aAAJ;IACA,MAAIC,KAAK,GAAG,EAAZ,CAJ4B;IAK5B;IAEA;IAEA;;IACA,WAASC,gBAAT,CAA0BC,OAA1B,EAAmCC,KAAnC,EAA0C;IACtC,WAAO;IACHC,MAAAA,GAAG,EAAEF,OADF;IAEHC,MAAAA,KAFG;IAGHE,MAAAA,QAAQ,EAAE,EAHP;IAIHjF,MAAAA,MAAM,EAAE,IAJL;IAKHkF,MAAAA,IAAI,EAAE,CALH;;IAAA,KAAP;IAOH,GAlB2B;;;IAoB5B,WAASC,KAAT,CAAeL,OAAf,EAAwBC,KAAxB,EAA+B;IAAE;IAC7B,QAAIK,OAAO,GAAGP,gBAAgB,CAACC,OAAD,EAAUC,KAAV,CAA9B;;IACA,QAAI,CAACL,IAAL,EAAW;IACPA,MAAAA,IAAI,GAAGU,OAAP,CADO;IAEV;;IACDT,IAAAA,aAAa,GAAGS,OAAhB;IACAR,IAAAA,KAAK,CAAC5C,IAAN,CAAWoD,OAAX;IACH,GA3B2B;;;IA6B5B,WAASC,GAAT,CAAaP,OAAb,EAAsB;IAAE;IACpB,QAAIM,OAAO,GAAGR,KAAK,CAACU,GAAN,EAAd;IACAX,IAAAA,aAAa,GAAGC,KAAK,CAACA,KAAK,CAAC7B,MAAN,GAAe,CAAhB,CAArB;;IACA,QAAI4B,aAAJ,EAAmB;IACfS,MAAAA,OAAO,CAACpF,MAAR,GAAiB2E,aAAjB;IACAA,MAAAA,aAAa,CAACM,QAAd,CAAuBjD,IAAvB,CAA4BoD,OAA5B;IACH;IACJ;;IAED,WAASG,KAAT,CAAeC,IAAf,EAAqB;IAAE;IACnBA,IAAAA,IAAI,GAAGA,IAAI,CAACC,OAAL,CAAa,KAAb,EAAoB,EAApB,CAAP;;IACA,QAAID,IAAJ,EAAU;IACNb,MAAAA,aAAa,CAACM,QAAd,CAAuBjD,IAAvB,CAA4B;IACxBkD,QAAAA,IAAI,EAAE,CADkB;IAExBM,QAAAA;IAFwB,OAA5B;IAIH;IACJ,GA9C2B;;;IAgD5B,SAAOf,IAAP,EAAa;IACT,QAAIiB,OAAO,GAAGjB,IAAI,CAACkB,OAAL,CAAa,GAAb,CAAd;;IACA,QAAID,OAAO,IAAI,CAAf,EAAkB;IACd,YAAME,cAAc,GAAGC,aAAa,EAApC;;IAEA,UAAID,cAAJ,EAAoB;IAChB;IACAT,QAAAA,KAAK,CAACS,cAAc,CAACd,OAAhB,EAAyBc,cAAc,CAACb,KAAxC,CAAL;IACH;;IACD,YAAMe,WAAW,GAAGrB,IAAI,CAACsB,KAAL,CAAW1B,MAAX,CAApB;;IAEA,UAAIyB,WAAJ,EAAiB;IACbE,QAAAA,OAAO,CAACF,WAAW,CAAC,CAAD,CAAX,CAAe/C,MAAhB,CAAP;IACAsC,QAAAA,GAAG,CAACS,WAAW,CAAC,CAAD,CAAZ,CAAH;IACH,OAZa;;IAcjB,KAhBQ;;;IAmBT,QAAIN,IAAJ;;IACA,QAAIE,OAAO,GAAG,CAAd,EAAiB;IACbF,MAAAA,IAAI,GAAGf,IAAI,CAACwB,SAAL,CAAe,CAAf,EAAkBP,OAAlB,CAAP,CADa;;IAEbH,MAAAA,KAAK,CAACC,IAAD,CAAL;IACH;;IACD,QAAIA,IAAJ,EAAU;IACNQ,MAAAA,OAAO,CAACR,IAAI,CAACzC,MAAN,CAAP,CADM;IAET;IACJ;;IAED,WAASiD,OAAT,CAAiBE,CAAjB,EAAoB;IAChBzB,IAAAA,IAAI,GAAGA,IAAI,CAACwB,SAAL,CAAeC,CAAf,CAAP;IACH;;IAED,WAASL,aAAT,GAAyB;IACrB,UAAMV,KAAK,GAAGV,IAAI,CAACsB,KAAL,CAAW5B,YAAX,CAAd,CADqB;;IAErB,QAAIgB,KAAJ,EAAW;IACP,YAAMY,KAAK,GAAG;IACVjB,QAAAA,OAAO,EAAEK,KAAK,CAAC,CAAD,CADJ;IACS;IACnBJ,QAAAA,KAAK,EAAE;IAFG,OAAd;IAIAiB,MAAAA,OAAO,CAACb,KAAK,CAAC,CAAD,CAAL,CAASpC,MAAV,CAAP;IACA,UAAIsC,GAAJ,EAASc,IAAT;;IACA,aAAO,EAAEd,GAAG,GAAGZ,IAAI,CAACsB,KAAL,CAAWxB,aAAX,CAAR,MAAuC4B,IAAI,GAAG1B,IAAI,CAACsB,KAAL,CAAWzB,SAAX,CAA9C,CAAP,EAA6E;IACzE0B,QAAAA,OAAO,CAACG,IAAI,CAAC,CAAD,CAAJ,CAAQpD,MAAT,CAAP;IACAgD,QAAAA,KAAK,CAAChB,KAAN,CAAY/C,IAAZ,CAAiB;IAAEoE,UAAAA,IAAI,EAAED,IAAI,CAAC,CAAD,CAAZ;IAAiBzD,UAAAA,KAAK,EAAEyD,IAAI,CAAC,CAAD,CAAJ,IAAWA,IAAI,CAAC,CAAD,CAAf,IAAsBA,IAAI,CAAC,CAAD;IAAlD,SAAjB;IACH;;IACD,UAAId,GAAJ,EAAS;IACLW,QAAAA,OAAO,CAACX,GAAG,CAAC,CAAD,CAAH,CAAOtC,MAAR,CAAP;IACA,eAAOgD,KAAP;IACH;IACJ;IACJ;;IAED,SAAOrB,IAAP;IAEH;;ICtHD,MAAM2B,YAAY,GAAG,0BAArB;;IAEA,SAASC,QAAT,CAAkBvB,KAAlB,EAAwB;IAAG;IACvB,MAAIwB,GAAG,GAAG,EAAV;;IACA,OAAI,IAAIzD,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAACiC,KAAK,CAAChC,MAAvB,EAA+BD,CAAC,EAAhC,EAAmC;IAC/B,QAAIqD,IAAI,GAAGpB,KAAK,CAACjC,CAAD,CAAhB,CAD+B;;IAE/B,QAAGqD,IAAI,CAACC,IAAL,KAAc,OAAjB,EAAyB;IACrB,UAAI9G,GAAG,GAAG,EAAV,CADqB;;IAErB6G,MAAAA,IAAI,CAACzD,KAAL,CAAW8D,KAAX,CAAiB,GAAjB,EAAsB3G,OAAtB,CAA8B4G,IAAI,IAAE;IAChC,YAAI,CAACtG,GAAD,EAAKuC,KAAL,IAAc+D,IAAI,CAACD,KAAL,CAAW,GAAX,CAAlB;IACAlH,QAAAA,GAAG,CAACa,GAAD,CAAH,GAAWuC,KAAX;IACH,OAHD;IAIAyD,MAAAA,IAAI,CAACzD,KAAL,GAAapD,GAAb,CANqB;IAOxB;;IACDiH,IAAAA,GAAG,IAAK,GAAEJ,IAAI,CAACC,IAAK,IAAGM,IAAI,CAACC,SAAL,CAAeR,IAAI,CAACzD,KAApB,CAA2B,GAAlD;IACH;;IACD,SAAQ,IAAG6D,GAAG,CAAClF,KAAJ,CAAU,CAAV,EAAY,CAAC,CAAb,CAAgB,GAA3B;IACH;;IACD,SAASuF,GAAT,CAAaC,IAAb,EAAkB;IACd,MAAGA,IAAI,CAAC3B,IAAL,KAAc,CAAjB,EAAmB;IACf,WAAO4B,QAAQ,CAACD,IAAD,CAAf;IACH,GAFD,MAEK;IACD;IACA,QAAIrB,IAAI,GAAGqB,IAAI,CAACrB,IAAhB;;IACA,QAAG,CAACa,YAAY,CAACU,IAAb,CAAkBvB,IAAlB,CAAJ,EAA4B;IAAG;IAC3B,aAAQ,MAAKkB,IAAI,CAACC,SAAL,CAAenB,IAAf,CAAqB,GAAlC,CADwB;IAE3B,KAFD,MAEK;IACD,UAAIwB,MAAM,GAAG,EAAb,CADC;;IAED,UAAIC,SAAS,GAAIZ,YAAY,CAACY,SAAb,GAAyB,CAA1C;IACA,UAAIlB,KAAJ,EAAUmB,KAAV;;IACA,aAAMnB,KAAK,GAAGM,YAAY,CAACc,IAAb,CAAkB3B,IAAlB,CAAd,EAAsC;IAClC0B,QAAAA,KAAK,GAAGnB,KAAK,CAACmB,KAAd,CADkC;;IAGlCF,QAAAA,MAAM,CAAChF,IAAP,CAAY0E,IAAI,CAACC,SAAL,CAAenB,IAAI,CAACnE,KAAL,CAAW4F,SAAX,EAAqBC,KAArB,CAAf,CAAZ;IACAF,QAAAA,MAAM,CAAChF,IAAP,CAAa,MAAK+D,KAAK,CAAC,CAAD,CAAL,CAASqB,IAAT,EAAgB,GAAlC;IACAH,QAAAA,SAAS,GAAGC,KAAK,GAAGnB,KAAK,CAAC,CAAD,CAAL,CAAShD,MAA7B;IACH;;IACD,UAAGkE,SAAS,GAAGzB,IAAI,CAACzC,MAApB,EAA2B;IACvBiE,QAAAA,MAAM,CAAChF,IAAP,CAAY0E,IAAI,CAACC,SAAL,CAAenB,IAAI,CAACnE,KAAL,CAAW4F,SAAX,CAAf,CAAZ;IACH;;IACD,aAAQ,MAAKD,MAAM,CAACK,IAAP,CAAY,GAAZ,CAAiB,GAA9B;IACH,KApBA;;IAsBJ;IACJ;;IACD,SAASC,WAAT,CAAqBC,EAArB,EAAwB;IAAE;IACtB,QAAMtC,QAAQ,GAAGsC,EAAE,CAACtC,QAApB;;IACA,MAAGA,QAAH,EAAY;IACR,WAAOA,QAAQ,CAACuC,GAAT,CAAaC,CAAC,IAAEb,GAAG,CAACa,CAAD,CAAnB,EAAwBJ,IAAxB,CAA6B,GAA7B,CAAP;IACH,GAFD,MAEK;IACD,WAAO,KAAP;IACH;IACJ;;IACM,SAASP,QAAT,CAAkBS,EAAlB,EAAqB;IACxB,MAAItC,QAAQ,GAAGqC,WAAW,CAACC,EAAD,CAA1B,CADwB;;IAExB,MAAIG,IAAI,GAAI,OAAMH,EAAE,CAACvC,GAAI,KACjBuC,EAAE,CAACxC,KAAH,CAAShC,MAAT,GAAkB,GAAEuD,QAAQ,CAACiB,EAAE,CAACxC,KAAJ,CAAW,EAAvC,GAA4C4C,SAC/C,GACG1C,QAAQ,GAAG,IAAGA,QAAS,EAAf,GAAkB,EAC7B,GAJL;IAMA,SAAOyC,IAAP;IACH;;IC5DM,SAASE,kBAAT,CAA4BC,QAA5B,EAAqC;IACxC;IACA;IAEA,MAAIC,GAAG,GAAGtD,SAAS,CAACqD,QAAD,CAAnB,CAJwC;IAOxC;;IAEA;;;;;;;;;IASA;;IACA,MAAIH,IAAI,GAAGZ,QAAQ,CAACgB,GAAD,CAAnB,CAnBwC;;IAqBxCJ,EAAAA,IAAI,GAAI,0BAAyBA,IAAK,QAAtC;IAEA,MAAIK,MAAM,GAAG,IAAIC,QAAJ,CAAaN,IAAb,CAAb,CAvBwC;IA0BxC;;IAEA,SAAOK,MAAP,CA5BwC;IA8BxC;IACA;IACA;IACH;;ICnCD,IAAIE,GAAG,GAAG,EAAV;;IACA,IAAIC,KAAK,GAAG,EAAZ;;IAGA,SAASC,mBAAT,GAA+B;IAC3B,OAAK,IAAIrF,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGoF,KAAK,CAACnF,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;IACnCoF,IAAAA,KAAK,CAACpF,CAAD,CAAL,CAASsF,GAAT;IACH;;IACDF,EAAAA,KAAK,GAAG,EAAR;IACAD,EAAAA,GAAG,GAAG,EAAN;IACH;;IAED,IAAII,SAAS,GAAG,EAAhB;;IAEO,SAASC,YAAT,CAAsBvG,OAAtB,EAA+B;IAClC,QAAMR,EAAE,GAAGQ,OAAO,CAACR,EAAnB;;IAEA,MAAI0G,GAAG,CAAC1G,EAAD,CAAH,IAAW,IAAf,EAAqB;IACjB0G,IAAAA,GAAG,CAAC1G,EAAD,CAAH,GAAU,IAAV,CADiB;;IAEjB2G,IAAAA,KAAK,CAAClG,IAAN,CAAWD,OAAX;IACAsG,IAAAA,SAAS,GAAC,EAAV;IACAE,IAAAA,QAAQ,CAACJ,mBAAD,CAAR,CAJiB;IAKpB;IAEJ;;IAGD,SAASK,mBAAT,GAA+B;IAC3BH,EAAAA,SAAS,CAACxI,OAAV,CAAkB4I,EAAE,IAAIA,EAAE,EAA1B;IACH;;IAEM,SAASF,QAAT,CAAkBE,EAAlB,EAAsB;IACzBJ,EAAAA,SAAS,CAACrG,IAAV,CAAeyG,EAAf,EADyB;IAEzB;IACA;;IACIC,EAAAA,UAAU,CAAC,MAAM;IACbF,IAAAA,mBAAmB,GADN;IAGhB,GAHS,EAGP,CAHO,CAAV,CAJqB;IAU5B;;ICtCD,IAAIjH,IAAE,GAAG,CAAT;IACA;;IAEA,MAAMoH,OAAN,CAAc;IACVlH,EAAAA,WAAW,CAAC+B,EAAD,EAAKoF,QAAL,EAAeC,EAAf,EAAmB3I,OAAnB,EAA4B;IACnC,SAAKsD,EAAL,GAAUA,EAAV;IACA,SAAKoF,QAAL,GAAgBA,QAAhB;IACA,SAAKC,EAAL,GAAUA,EAAV;IACA,SAAK3I,OAAL,GAAeA,OAAf;IACA,SAAK4I,IAAL,GAAY,EAAZ,CALmC;;IAMnC,SAAKC,MAAL,GAAc,IAAIC,GAAJ,EAAd;;IACA,QAAI,OAAOJ,QAAP,IAAmB,UAAvB,EAAmC;IAC/B,WAAKK,MAAL,GAAcL,QAAd;IACH;;IACD,SAAKrH,EAAL,GAAUA,IAAE,EAAZ;IACA,SAAK6B,GAAL;IACH;;IACDgF,EAAAA,GAAG,GAAE;IACD,SAAKhF,GAAL,GADC;IAEJ;;IACDA,EAAAA,GAAG,GAAG;IACF;IACA;IACA;IACA;IAEAjB,IAAAA,UAAU,CAAC,IAAD,CAAV,CANE;;IAOF,SAAK8G,MAAL,GAPE;;IAQF7G,IAAAA,SAAS,GARP;IAUF;IACH;;IACDP,EAAAA,MAAM,CAACsB,GAAD,EAAM;IACR,QAAI5B,EAAE,GAAG4B,GAAG,CAAC5B,EAAb;;IACA,QAAI,CAAC,KAAKwH,MAAL,CAAYd,GAAZ,CAAgB1G,EAAhB,CAAL,EAA0B;IACtB,WAAKwH,MAAL,CAAYG,GAAZ,CAAgB3H,EAAhB;IACA,WAAKuH,IAAL,CAAU9G,IAAV,CAAemB,GAAf;IACAA,MAAAA,GAAG,CAACrB,MAAJ,CAAW,IAAX,EAHsB;IAIzB;IACJ;;IACDI,EAAAA,MAAM,GAAE;IAAE;IACNoG,IAAAA,YAAY,CAAC,IAAD,CAAZ,CADI;IAEJ;IACH;;IAxCS;;ICSP,SAASa,cAAT,CAAwB3F,EAAxB,EAA4B+D,EAA5B,EAAgC;IACnC;IACA;IAGA;IACA6B,EAAAA,QAAQ,CAAC5F,EAAD,EAAK,aAAL,CAAR;;IACA,QAAM6F,eAAe,GAAG,MAAM;IAC1B;IACA;IACA;IACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;;IACA/F,IAAAA,EAAE,CAACgG,OAAH,CAAWhG,EAAE,CAACiG,OAAH,EAAX;IACH,GAND,CAPmC;;;IAgBnC,MAAId,OAAJ,CAAYnF,EAAZ,EAAgB6F,eAAhB,EAAiC,MAAM,EAAvC,EAA2C,IAA3C;IAEAD,EAAAA,QAAQ,CAAC5F,EAAD,EAAK,SAAL,CAAR,CAlBmC;IAuBtC;IAGM,SAAS4F,QAAT,CAAkB5F,EAAlB,EAAsB1D,IAAtB,EAA4B;IAAE;IACjC,MAAI4J,QAAQ,GAAGlG,EAAE,CAACE,QAAH,CAAY5D,IAAZ,CAAf,CAD+B;;IAE/B,MAAI4J,QAAJ,EAAc;IACV,SAAK,IAAI5G,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG4G,QAAQ,CAAC3G,MAA7B,EAAqCD,CAAC,EAAtC,EAA0C;IAAE;IACxC4G,MAAAA,QAAQ,CAAC5G,CAAD,CAAR,CAAYkB,IAAZ,CAAiBR,EAAjB,EADsC;IAEzC;IACJ;IACJ;;IC5CM,SAASmG,SAAT,CAAmBC,GAAnB,EAAwB;IAE3BA,EAAAA,GAAG,CAAClJ,SAAJ,CAAcmJ,KAAd,GAAsB,UAAS3J,OAAT,EAAkB;IACpC;IACA,UAAMsD,EAAE,GAAG,IAAX,CAFoC;;IAIpCA,IAAAA,EAAE,CAACE,QAAH,GAAc3D,YAAY,CAACyD,EAAE,CAAC/B,WAAH,CAAevB,OAAhB,EAAwBA,OAAxB,CAA1B,CAJoC;;IAMpCkJ,IAAAA,QAAQ,CAAC5F,EAAD,EAAI,cAAJ,CAAR;IACAD,IAAAA,SAAS,CAACC,EAAD,CAAT,CAPoC;;IASpC4F,IAAAA,QAAQ,CAAC5F,EAAD,EAAI,SAAJ,CAAR,CAToC;;IAWpC,QAAIA,EAAE,CAACE,QAAH,CAAY6D,EAAhB,EAAoB;IAAE;IAClB/D,MAAAA,EAAE,CAACsG,MAAH,CAAUtG,EAAE,CAACE,QAAH,CAAY6D,EAAtB;IACH;IACJ,GAdD;;IAeAqC,EAAAA,GAAG,CAAClJ,SAAJ,CAAcoJ,MAAd,GAAuB,UAAUvC,EAAV,EAAc;IAAE;IACnC;IACA,UAAM/D,EAAE,GAAG,IAAX;IACA+D,IAAAA,EAAE,GAAG/D,EAAE,CAACuG,GAAH,GAASC,QAAQ,CAACC,aAAT,CAAuB1C,EAAvB,CAAd,CAHiC;IAKjC;;IACA,UAAM9D,IAAI,GAAGD,EAAE,CAACE,QAAhB;;IAEA,QAAG,CAACD,IAAI,CAACsE,MAAT,EAAgB;IACZ,UAAIF,QAAQ,GAAGpE,IAAI,CAACoE,QAApB;;IACA,UAAG,CAACA,QAAD,IAAaN,EAAhB,EAAmB;IAAE;IACjBM,QAAAA,QAAQ,GAAGN,EAAE,CAAC2C,SAAd;IACAZ,QAAAA,OAAO,CAACC,GAAR,CAAY1B,QAAZ;IACH;;IACD,YAAME,MAAM,GAAGH,kBAAkB,CAACC,QAAD,CAAjC;IACApE,MAAAA,IAAI,CAACsE,MAAL,GAAcA,MAAd;IACH,KAhBgC;;;IAoBjCoB,IAAAA,cAAc,CAAC3F,EAAD,CAAd,CApBiC;IAqBpC,GArBD;IAuBH;;IC3CD;IACA;IACA;IACA;;IACA,SAASoG,GAAT,CAAa1J,OAAb,EAAqB;IAEjB;IACA,OAAK2J,KAAL,CAAW3J,OAAX,EAHiB;;IAIpB;;IAEDyJ,SAAS,CAACC,GAAD,CAAT;;;;;;;;"}